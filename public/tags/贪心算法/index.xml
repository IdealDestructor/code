<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>贪心算法 on Code is poetry.</title>
    <link>http://code.deqiang.wang/tags/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 贪心算法 on Code is poetry.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 Jun 2022 14:22:35 +0000</lastBuildDate><atom:link href="http://code.deqiang.wang/tags/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode[435] 无重叠区间</title>
      <link>http://code.deqiang.wang/posts/leetcode435-%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4/</link>
      <pubDate>Mon, 13 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode435-%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;给定一个区间的集合，找到需要移除区间的最小数量，使剩余区间互不重叠。&lt;/p&gt;
&lt;p&gt;注意: 可以认为区间的终点总是大于它的起点。 区间 [1,2] 和 [2,3] 的边界相互“接触”，但没有相互重叠。&lt;/p&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: [ [1,2], [2,3], [3,4], [1,3] ]&lt;/li&gt;
&lt;li&gt;输出: 1&lt;/li&gt;
&lt;li&gt;解释: 移除 [1,3] 后，剩下的区间没有重叠。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 2:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: [ [1,2], [1,2], [1,2] ]&lt;/li&gt;
&lt;li&gt;输出: 2&lt;/li&gt;
&lt;li&gt;解释: 你需要移除两个 [1,2] 来使剩下的区间没有重叠。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 3:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: [ [1,2], [2,3] ]&lt;/li&gt;
&lt;li&gt;输出: 0&lt;/li&gt;
&lt;li&gt;解释: 你不需要移除任何区间，因为它们已经是无重叠的了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[134] 加油站</title>
      <link>http://code.deqiang.wang/posts/leetcode134-%E5%8A%A0%E6%B2%B9%E7%AB%99/</link>
      <pubDate>Fri, 10 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode134-%E5%8A%A0%E6%B2%B9%E7%AB%99/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;在一条环路上有 N 个加油站，其中第 i 个加油站有汽油 gas[i] 升。&lt;/p&gt;
&lt;p&gt;你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost[i] 升。你从其中的一个加油站出发，开始时油箱为空。&lt;/p&gt;
&lt;p&gt;如果你可以绕环路行驶一周，则返回出发时加油站的编号，否则返回 -1。&lt;/p&gt;
&lt;p&gt;说明:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果题目有解，该答案即为唯一答案。&lt;/li&gt;
&lt;li&gt;输入数组均为非空数组，且长度相同。&lt;/li&gt;
&lt;li&gt;输入数组中的元素均为非负数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 1: 输入:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gas = [1,2,3,4,5]&lt;/li&gt;
&lt;li&gt;cost = [3,4,5,1,2]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输出: 3 解释:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从 3 号加油站(索引为 3 处)出发，可获得 4 升汽油。此时油箱有 = 0 + 4 = 4 升汽油&lt;/li&gt;
&lt;li&gt;开往 4 号加油站，此时油箱有 4 - 1 + 5 = 8 升汽油&lt;/li&gt;
&lt;li&gt;开往 0 号加油站，此时油箱有 8 - 2 + 1 = 7 升汽油&lt;/li&gt;
&lt;li&gt;开往 1 号加油站，此时油箱有 7 - 3 + 2 = 6 升汽油&lt;/li&gt;
&lt;li&gt;开往 2 号加油站，此时油箱有 6 - 4 + 3 = 5 升汽油&lt;/li&gt;
&lt;li&gt;开往 3 号加油站，你需要消耗 5 升汽油，正好足够你返回到 3 号加油站。&lt;/li&gt;
&lt;li&gt;因此，3 可为起始索引。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 2: 输入:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gas = [2,3,4]&lt;/li&gt;
&lt;li&gt;cost = [3,4,3]&lt;/li&gt;
&lt;li&gt;输出: -1&lt;/li&gt;
&lt;li&gt;解释: 你不能从 0 号或 1 号加油站出发，因为没有足够的汽油可以让你行驶到下一个加油站。我们从 2 号加油站出发，可以获得 4 升汽油。 此时油箱有 = 0 + 4 = 4 升汽油。开往 0 号加油站，此时油箱有 4 - 3 + 2 = 3 升汽油。开往 1 号加油站，此时油箱有 3 - 3 + 3 = 3 升汽油。你无法返回 2 号加油站，因为返程需要消耗 4 升汽油，但是你的油箱只有 3 升汽油。因此，无论怎样，你都不可能绕环路行驶一周。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[376] 摆动序列</title>
      <link>http://code.deqiang.wang/posts/leetcode376-%E6%91%86%E5%8A%A8%E5%BA%8F%E5%88%97/</link>
      <pubDate>Thu, 09 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode376-%E6%91%86%E5%8A%A8%E5%BA%8F%E5%88%97/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果连续数字之间的差严格地在正数和负数之间交替，则数字序列称为摆动序列。第一个差（如果存在的话）可能是正数或负数。少于两个元素的序列也是摆动序列。&lt;/p&gt;
&lt;p&gt;例如， [1,7,4,9,2,5] 是一个摆动序列，因为差值 (6,-3,5,-7,3) 是正负交替出现的。相反, [1,4,7,2,5] 和 [1,7,4,5,5] 不是摆动序列，第一个序列是因为它的前两个差值都是正数，第二个序列是因为它的最后一个差值为零。&lt;/p&gt;
&lt;p&gt;给定一个整数序列，返回作为摆动序列的最长子序列的长度。 通过从原始序列中删除一些（也可以不删除）元素来获得子序列，剩下的元素保持其原始顺序。&lt;/p&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: [1,7,4,9,2,5]&lt;/li&gt;
&lt;li&gt;输出: 6&lt;/li&gt;
&lt;li&gt;解释: 整个序列均为摆动序列。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 2:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: [1,17,5,10,13,15,10,5,16,8]&lt;/li&gt;
&lt;li&gt;输出: 7&lt;/li&gt;
&lt;li&gt;解释: 这个序列包含几个长度为 7 摆动序列，其中一个可为[1,17,10,13,10,16,8]。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 3:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: [1,2,3,4,5,6,7,8,9]&lt;/li&gt;
&lt;li&gt;输出: 2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[300] 最长递增子序列</title>
      <link>http://code.deqiang.wang/posts/leetcode300-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97-/</link>
      <pubDate>Sun, 12 Dec 2021 22:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode300-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97-/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;二分查找&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-search/&#34;&gt;https://leetcode.com/tag/binary-search/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;递增的三元子序列&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/increasing-triplet-subsequence/&#34;&gt;https://leetcode.com/problems/increasing-triplet-subsequence/&lt;/a&gt;
&amp;ldquo;俄罗斯套娃信封问题&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/russian-doll-envelopes/&#34;&gt;https://leetcode.com/problems/russian-doll-envelopes/&lt;/a&gt;
&amp;ldquo;最长数对链&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-length-of-pair-chain/&#34;&gt;https://leetcode.com/problems/maximum-length-of-pair-chain/&lt;/a&gt;
&amp;ldquo;最长递增子序列的个数&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/number-of-longest-increasing-subsequence/&#34;&gt;https://leetcode.com/problems/number-of-longest-increasing-subsequence/&lt;/a&gt;
&amp;ldquo;两个字符串的最小ASCII删除和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/&#34;&gt;https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个整数数组 &lt;code&gt;nums&lt;/code&gt; ，找到其中最长严格递增子序列的长度。&lt;/p&gt;
&lt;p&gt;子序列是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，&lt;code&gt;[3,6,2,7]&lt;/code&gt; 是数组 &lt;code&gt;[0,3,1,6,2,2,7]&lt;/code&gt; 的子序列。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [10,9,2,5,3,7,101,18]
输出：4
解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [0,1,0,3,2,3]
输出：4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [7,7,7,7,7,7,7]
输出：1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 2500&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-104 &amp;lt;= nums[i] &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进阶：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你可以设计时间复杂度为 &lt;code&gt;O(n2)&lt;/code&gt; 的解决方案吗？&lt;/li&gt;
&lt;li&gt;你能将算法的时间复杂度降低到 &lt;code&gt;O(n log(n))&lt;/code&gt; 吗?&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
