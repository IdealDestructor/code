<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>哈希表 on Code is poetry.</title>
    <link>http://code.deqiang.wang/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/</link>
    <description>Recent content in 哈希表 on Code is poetry.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 01 Jun 2022 14:22:35 +0000</lastBuildDate><atom:link href="http://code.deqiang.wang/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode[560] 和为 K 的子数组</title>
      <link>http://code.deqiang.wang/posts/leetcode560-%E5%92%8C%E4%B8%BA-k-%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</link>
      <pubDate>Wed, 01 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode560-%E5%92%8C%E4%B8%BA-k-%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个整数数组 &lt;code&gt;nums&lt;/code&gt; 和一个整数 &lt;code&gt;k&lt;/code&gt; ，请你统计并返回 &lt;em&gt;该数组中和为 &lt;code&gt;k&lt;/code&gt; 的子数组的个数&lt;/em&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [1,1,1], k = 2
输出：2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [1,2,3], k = 3
输出：2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 2 * 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-1000 &amp;lt;= nums[i] &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-107 &amp;lt;= k &amp;lt;= 107&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[128] 最长连续序列</title>
      <link>http://code.deqiang.wang/posts/leetcode128-%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sun, 14 Nov 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode128-%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;并查集&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/union-find/&#34;&gt;https://leetcode.com/tag/union-find/&lt;/a&gt;
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;哈希表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/hash-table/&#34;&gt;https://leetcode.com/tag/hash-table/&lt;/a&gt;
Similar Questions:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;二叉树最长连续序列&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/binary-tree-longest-consecutive-sequence/&#34;&gt;https://leetcode.com/problems/binary-tree-longest-consecutive-sequence/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个未排序的整数数组 &lt;code&gt;nums&lt;/code&gt; ，找出数字连续的最长序列（不要求序列元素在原数组中连续）的长度。&lt;/p&gt;
&lt;p&gt;请你设计并实现时间复杂度为 &lt;code&gt;O(n)&lt;/code&gt;的算法解决此问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [100,4,200,1,3,2]
输出：4
解释：最长数字连续序列是 [1, 2, 3, 4]。它的长度为 4。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [0,3,7,2,5,8,4,6,0,1]
输出：9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums.length &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-109 &amp;lt;= nums[i] &amp;lt;= 109&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;solution&#34;&gt;
  Solution:
  &lt;a class=&#34;heading-link&#34; href=&#34;#solution&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Template generated via &lt;a href=&#34;https://github.com/crimx/crx-leetmark&#34;&gt;Leetmark&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[146] LRU缓存机制</title>
      <link>http://code.deqiang.wang/posts/leetcode146-lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Fri, 02 Apr 2021 19:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode146-lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;设计&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/design/&#34;&gt;https://leetcode.com/tag/design/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;similar-questions&#34;&gt;
  Similar Questions:
  &lt;a class=&#34;heading-link&#34; href=&#34;#similar-questions&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;LFU 缓存&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/lfu-cache/&#34;&gt;https://leetcode.com/problems/lfu-cache/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;设计内存文件系统&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/design-in-memory-file-system/&#34;&gt;https://leetcode.com/problems/design-in-memory-file-system/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;迭代压缩字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/design-compressed-string-iterator/&#34;&gt;https://leetcode.com/problems/design-compressed-string-iterator/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;运用你所掌握的数据结构，设计和实现一个 &lt;a href=&#34;https://baike.baidu.com/item/LRU&#34;&gt;LRU (最近最少使用) 缓存机制&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;实现 &lt;code&gt;LRUCache&lt;/code&gt; 类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;LRUCache(int capacity)&lt;/code&gt; 以正整数作为容量 &lt;code&gt;capacity&lt;/code&gt; 初始化 LRU 缓存&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int get(int key)&lt;/code&gt; 如果关键字 &lt;code&gt;key&lt;/code&gt; 存在于缓存中，则返回关键字的值，否则返回 &lt;code&gt;1&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void put(int key, int value)&lt;/code&gt; 如果关键字已经存在，则变更其数据值；如果关键字不存在，则插入该组「关键字-值」。当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值，从而为新的数据值留出空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进阶&lt;/strong&gt;：你是否可以在 &lt;code&gt;O(1)&lt;/code&gt; 时间复杂度内完成这两种操作？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入
[&amp;#34;LRUCache&amp;#34;, &amp;#34;put&amp;#34;, &amp;#34;put&amp;#34;, &amp;#34;get&amp;#34;, &amp;#34;put&amp;#34;, &amp;#34;get&amp;#34;, &amp;#34;put&amp;#34;, &amp;#34;get&amp;#34;, &amp;#34;get&amp;#34;, &amp;#34;get&amp;#34;]
[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]
输出
[null, null, null, 1, null, -1, null, -1, 3, 4]

解释
LRUCache lRUCache = new LRUCache(2);
lRUCache.put(1, 1); // 缓存是 {1=1}
lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}
lRUCache.get(1);    // 返回 1
lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}
lRUCache.get(2);    // 返回 -1 (未找到)
lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}
lRUCache.get(1);    // 返回 -1 (未找到)
lRUCache.get(3);    // 返回 3
lRUCache.get(4);    // 返回 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= capacity &amp;lt;= 3000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= key &amp;lt;= 3000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= value &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;最多调用 &lt;code&gt;3 * 104&lt;/code&gt; 次 &lt;code&gt;get&lt;/code&gt; 和 &lt;code&gt;put&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>剑指Offer[03] 数组中重复的数字</title>
      <link>http://code.deqiang.wang/posts/%E5%89%91%E6%8C%87offer03-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/</link>
      <pubDate>Thu, 11 Mar 2021 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/%E5%89%91%E6%8C%87offer03-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;哈希表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/hash-table/&#34;&gt;https://leetcode.com/tag/hash-table/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;找出数组中重复的数字。&lt;/p&gt;
&lt;p&gt;在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：
[2, 3, 1, 0, 2, 5, 3]
输出：2 或 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;限制：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;2 &amp;lt;= n &amp;lt;= 100000&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
