<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LeetCode on Code is poetry.</title>
    <link>http://code.deqiang.wang/categories/leetcode/</link>
    <description>Recent content in LeetCode on Code is poetry.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Jun 2022 14:22:35 +0000</lastBuildDate><atom:link href="http://code.deqiang.wang/categories/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode[39] 组合总和</title>
      <link>http://code.deqiang.wang/posts/leetcode39-%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/</link>
      <pubDate>Mon, 20 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode39-%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个无重复元素的数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。&lt;/p&gt;
&lt;p&gt;candidates 中的数字可以无限制重复被选取。&lt;/p&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有数字（包括 target）都是正整数。&lt;/li&gt;
&lt;li&gt;解集不能包含重复的组合。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 1： 输入：candidates = [2,3,6,7], target = 7, 所求解集为： [ [7], [2,2,3] ]&lt;/p&gt;
&lt;p&gt;示例 2： 输入：candidates = [2,3,5], target = 8, 所求解集为： [  [2,2,2,2],  [2,3,3],  [3,5] ]&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[494] 目标和</title>
      <link>http://code.deqiang.wang/posts/leetcode494-%E7%9B%AE%E6%A0%87%E5%92%8C/</link>
      <pubDate>Thu, 16 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode494-%E7%9B%AE%E6%A0%87%E5%92%8C/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;难度：中等&lt;/p&gt;
&lt;p&gt;给定一个非负整数数组，a1, a2, &amp;hellip;, an, 和一个目标数，S。现在你有两个符号 + 和 -。对于数组中的任意一个整数，你都可以从 + 或 -中选择一个符号添加在前面。&lt;/p&gt;
&lt;p&gt;返回可以使最终数组和为目标数 S 的所有添加符号的方法数。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;输入：nums: [1, 1, 1, 1, 1], S: 3
输出：5&lt;/p&gt;
&lt;p&gt;解释：
-1+1+1+1+1 = 3
+1-1+1+1+1 = 3
+1+1-1+1+1 = 3
+1+1+1-1+1 = 3
+1+1+1+1-1 = 3&lt;/p&gt;
&lt;p&gt;一共有5种方法让最终目标和为3。&lt;/p&gt;
&lt;p&gt;提示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数组非空，且长度不会超过 20 。&lt;/li&gt;
&lt;li&gt;初始的数组的和不会超过 1000 。&lt;/li&gt;
&lt;li&gt;保证返回的最终结果能被 32 位整数存下。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[435] 无重叠区间</title>
      <link>http://code.deqiang.wang/posts/leetcode435-%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4/</link>
      <pubDate>Mon, 13 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode435-%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;给定一个区间的集合，找到需要移除区间的最小数量，使剩余区间互不重叠。&lt;/p&gt;
&lt;p&gt;注意: 可以认为区间的终点总是大于它的起点。 区间 [1,2] 和 [2,3] 的边界相互“接触”，但没有相互重叠。&lt;/p&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: [ [1,2], [2,3], [3,4], [1,3] ]&lt;/li&gt;
&lt;li&gt;输出: 1&lt;/li&gt;
&lt;li&gt;解释: 移除 [1,3] 后，剩下的区间没有重叠。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 2:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: [ [1,2], [1,2], [1,2] ]&lt;/li&gt;
&lt;li&gt;输出: 2&lt;/li&gt;
&lt;li&gt;解释: 你需要移除两个 [1,2] 来使剩下的区间没有重叠。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 3:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: [ [1,2], [2,3] ]&lt;/li&gt;
&lt;li&gt;输出: 0&lt;/li&gt;
&lt;li&gt;解释: 你不需要移除任何区间，因为它们已经是无重叠的了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[134] 加油站</title>
      <link>http://code.deqiang.wang/posts/leetcode134-%E5%8A%A0%E6%B2%B9%E7%AB%99/</link>
      <pubDate>Fri, 10 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode134-%E5%8A%A0%E6%B2%B9%E7%AB%99/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;在一条环路上有 N 个加油站，其中第 i 个加油站有汽油 gas[i] 升。&lt;/p&gt;
&lt;p&gt;你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost[i] 升。你从其中的一个加油站出发，开始时油箱为空。&lt;/p&gt;
&lt;p&gt;如果你可以绕环路行驶一周，则返回出发时加油站的编号，否则返回 -1。&lt;/p&gt;
&lt;p&gt;说明:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果题目有解，该答案即为唯一答案。&lt;/li&gt;
&lt;li&gt;输入数组均为非空数组，且长度相同。&lt;/li&gt;
&lt;li&gt;输入数组中的元素均为非负数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 1: 输入:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gas = [1,2,3,4,5]&lt;/li&gt;
&lt;li&gt;cost = [3,4,5,1,2]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输出: 3 解释:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从 3 号加油站(索引为 3 处)出发，可获得 4 升汽油。此时油箱有 = 0 + 4 = 4 升汽油&lt;/li&gt;
&lt;li&gt;开往 4 号加油站，此时油箱有 4 - 1 + 5 = 8 升汽油&lt;/li&gt;
&lt;li&gt;开往 0 号加油站，此时油箱有 8 - 2 + 1 = 7 升汽油&lt;/li&gt;
&lt;li&gt;开往 1 号加油站，此时油箱有 7 - 3 + 2 = 6 升汽油&lt;/li&gt;
&lt;li&gt;开往 2 号加油站，此时油箱有 6 - 4 + 3 = 5 升汽油&lt;/li&gt;
&lt;li&gt;开往 3 号加油站，你需要消耗 5 升汽油，正好足够你返回到 3 号加油站。&lt;/li&gt;
&lt;li&gt;因此，3 可为起始索引。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 2: 输入:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gas = [2,3,4]&lt;/li&gt;
&lt;li&gt;cost = [3,4,3]&lt;/li&gt;
&lt;li&gt;输出: -1&lt;/li&gt;
&lt;li&gt;解释: 你不能从 0 号或 1 号加油站出发，因为没有足够的汽油可以让你行驶到下一个加油站。我们从 2 号加油站出发，可以获得 4 升汽油。 此时油箱有 = 0 + 4 = 4 升汽油。开往 0 号加油站，此时油箱有 4 - 3 + 2 = 3 升汽油。开往 1 号加油站，此时油箱有 3 - 3 + 3 = 3 升汽油。你无法返回 2 号加油站，因为返程需要消耗 4 升汽油，但是你的油箱只有 3 升汽油。因此，无论怎样，你都不可能绕环路行驶一周。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[376] 摆动序列</title>
      <link>http://code.deqiang.wang/posts/leetcode376-%E6%91%86%E5%8A%A8%E5%BA%8F%E5%88%97/</link>
      <pubDate>Thu, 09 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode376-%E6%91%86%E5%8A%A8%E5%BA%8F%E5%88%97/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果连续数字之间的差严格地在正数和负数之间交替，则数字序列称为摆动序列。第一个差（如果存在的话）可能是正数或负数。少于两个元素的序列也是摆动序列。&lt;/p&gt;
&lt;p&gt;例如， [1,7,4,9,2,5] 是一个摆动序列，因为差值 (6,-3,5,-7,3) 是正负交替出现的。相反, [1,4,7,2,5] 和 [1,7,4,5,5] 不是摆动序列，第一个序列是因为它的前两个差值都是正数，第二个序列是因为它的最后一个差值为零。&lt;/p&gt;
&lt;p&gt;给定一个整数序列，返回作为摆动序列的最长子序列的长度。 通过从原始序列中删除一些（也可以不删除）元素来获得子序列，剩下的元素保持其原始顺序。&lt;/p&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: [1,7,4,9,2,5]&lt;/li&gt;
&lt;li&gt;输出: 6&lt;/li&gt;
&lt;li&gt;解释: 整个序列均为摆动序列。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 2:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: [1,17,5,10,13,15,10,5,16,8]&lt;/li&gt;
&lt;li&gt;输出: 7&lt;/li&gt;
&lt;li&gt;解释: 这个序列包含几个长度为 7 摆动序列，其中一个可为[1,17,10,13,10,16,8]。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例 3:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: [1,2,3,4,5,6,7,8,9]&lt;/li&gt;
&lt;li&gt;输出: 2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[518] 零钱兑换 II</title>
      <link>http://code.deqiang.wang/posts/leetcode518-%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2-ii/</link>
      <pubDate>Tue, 07 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode518-%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2-ii/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;给定不同面额的硬币和一个总金额。写出函数来计算可以凑成总金额的硬币组合数。假设每一种面额的硬币有无限个。&lt;/p&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;p&gt;输入: amount = 5, coins = [1, 2, 5] 输出: 4 解释: 有四种方式可以凑成总金额: 5=5 5=2+2+1 5=2+1+1+1 5=1+1+1+1+1&lt;/p&gt;
&lt;p&gt;示例 2: 输入: amount = 3, coins = [2] 输出: 0 解释: 只用面额2的硬币不能凑成总金额3。&lt;/p&gt;
&lt;p&gt;示例 3: 输入: amount = 10, coins = [10] 输出: 1&lt;/p&gt;
&lt;p&gt;注意，你可以假设：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0 &amp;lt;= amount (总金额) &amp;lt;= 5000&lt;/li&gt;
&lt;li&gt;1 &amp;lt;= coin (硬币面额) &amp;lt;= 5000&lt;/li&gt;
&lt;li&gt;硬币种类不超过 500 种&lt;/li&gt;
&lt;li&gt;结果符合 32 位符号整数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[977] 有序数组的平方</title>
      <link>http://code.deqiang.wang/posts/leetcode977-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/</link>
      <pubDate>Thu, 02 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode977-%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。&lt;/p&gt;
&lt;p&gt;示例 1：&lt;/p&gt;
&lt;p&gt;输入：nums = [-4,-1,0,3,10]
输出：[0,1,9,16,100]
解释：平方后，数组变为 [16,1,0,9,100]
排序后，数组变为 [0,1,9,16,100]
示例 2：&lt;/p&gt;
&lt;p&gt;输入：nums = [-7,-3,2,3,11]
输出：[4,9,9,49,121]&lt;/p&gt;
&lt;p&gt;提示：&lt;/p&gt;
&lt;p&gt;1 &amp;lt;= nums.length &amp;lt;= 104
-104 &amp;lt;= nums[i] &amp;lt;= 104
nums 已按 非递减顺序 排序&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[560] 和为 K 的子数组</title>
      <link>http://code.deqiang.wang/posts/leetcode560-%E5%92%8C%E4%B8%BA-k-%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</link>
      <pubDate>Wed, 01 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode560-%E5%92%8C%E4%B8%BA-k-%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个整数数组 &lt;code&gt;nums&lt;/code&gt; 和一个整数 &lt;code&gt;k&lt;/code&gt; ，请你统计并返回 &lt;em&gt;该数组中和为 &lt;code&gt;k&lt;/code&gt; 的子数组的个数&lt;/em&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [1,1,1], k = 2
输出：2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [1,2,3], k = 3
输出：2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 2 * 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-1000 &amp;lt;= nums[i] &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-107 &amp;lt;= k &amp;lt;= 107&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[72] 编辑距离</title>
      <link>http://code.deqiang.wang/posts/leetcode72-%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/</link>
      <pubDate>Sun, 13 Feb 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode72-%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/</guid>
      <description>&lt;p&gt;Related Topics:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similar Questions:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;相隔为 1 的编辑距离&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/one-edit-distance/&#34;&gt;https://leetcode.com/problems/one-edit-distance/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;两个字符串的删除操作&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/delete-operation-for-two-strings/&#34;&gt;https://leetcode.com/problems/delete-operation-for-two-strings/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;两个字符串的最小ASCII删除和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/&#34;&gt;https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;不相交的线&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/uncrossed-lines/&#34;&gt;https://leetcode.com/problems/uncrossed-lines/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你两个单词 &lt;code&gt;word1&lt;/code&gt; 和 &lt;code&gt;word2&lt;/code&gt;，请你计算出将 &lt;code&gt;word1&lt;/code&gt; 转换成 &lt;code&gt;word2&lt;/code&gt;所使用的最少操作数 。&lt;/p&gt;
&lt;p&gt;你可以对一个单词进行如下三种操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插入一个字符&lt;/li&gt;
&lt;li&gt;删除一个字符&lt;/li&gt;
&lt;li&gt;替换一个字符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：word1 = &amp;#34;horse&amp;#34;, word2 = &amp;#34;ros&amp;#34;
输出：3
解释：
horse -&amp;gt; rorse (将 &amp;#39;h&amp;#39; 替换为 &amp;#39;r&amp;#39;)
rorse -&amp;gt; rose (删除 &amp;#39;r&amp;#39;)
rose -&amp;gt; ros (删除 &amp;#39;e&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：word1 = &amp;#34;intention&amp;#34;, word2 = &amp;#34;execution&amp;#34;
输出：5
解释：
intention -&amp;gt; inention (删除 &amp;#39;t&amp;#39;)
inention -&amp;gt; enention (将 &amp;#39;i&amp;#39; 替换为 &amp;#39;e&amp;#39;)
enention -&amp;gt; exention (将 &amp;#39;n&amp;#39; 替换为 &amp;#39;x&amp;#39;)
exention -&amp;gt; exection (将 &amp;#39;n&amp;#39; 替换为 &amp;#39;c&amp;#39;)
exection -&amp;gt; execution (插入 &amp;#39;u&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= word1.length, word2.length &amp;lt;= 500&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;word1&lt;/code&gt; 和 &lt;code&gt;word2&lt;/code&gt; 由小写英文字母组成&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[257] 二叉树的所有路径</title>
      <link>http://code.deqiang.wang/posts/leetcode257-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84/</link>
      <pubDate>Sat, 08 Jan 2022 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode257-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;
Similar Questions:
&amp;ldquo;路径总和 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/path-sum-ii/&#34;&gt;https://leetcode.com/problems/path-sum-ii/&lt;/a&gt;
&amp;ldquo;从叶结点开始的最小字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/smallest-string-starting-from-leaf/&#34;&gt;https://leetcode.com/problems/smallest-string-starting-from-leaf/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个二叉树的根节点 &lt;code&gt;root&lt;/code&gt; ，按 &lt;strong&gt;任意顺序&lt;/strong&gt; ，返回所有从根节点到叶子节点的路径。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;叶子节点&lt;/strong&gt; 是指没有子节点的节点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [1,2,3,null,5]
输出：[&amp;#34;1-&amp;gt;2-&amp;gt;5&amp;#34;,&amp;#34;1-&amp;gt;3&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [1]
输出：[&amp;#34;1&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树中节点的数目在范围 &lt;code&gt;[1, 100]&lt;/code&gt; 内&lt;/li&gt;
&lt;li&gt;`-100 &amp;lt;= Node.val &amp;lt;= 100&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[110] 平衡二叉树</title>
      <link>http://code.deqiang.wang/posts/leetcode110-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Thu, 06 Jan 2022 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode110-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;
Similar Questions:
&amp;ldquo;二叉树的最大深度&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-depth-of-binary-tree/&#34;&gt;https://leetcode.com/problems/maximum-depth-of-binary-tree/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个二叉树，判断它是否是高度平衡的二叉树。&lt;/p&gt;
&lt;p&gt;本题中，一棵高度平衡二叉树定义为：&lt;/p&gt;
&lt;p&gt;一个二叉树&lt;em&gt;每个节点&lt;/em&gt;的左右两个子树的高度差的绝对值不超过 1 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [3,9,20,null,null,15,7]
输出：true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [1,2,2,3,3,null,null,4,4]
输出：false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = []
输出：true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树中的节点数在范围 &lt;code&gt;[0, 5000]&lt;/code&gt; 内&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-104 &amp;lt;= Node.val &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[222] 完全二叉树的节点个数</title>
      <link>http://code.deqiang.wang/posts/leetcode222-%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0/</link>
      <pubDate>Wed, 05 Jan 2022 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode222-%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;二分查找&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-search/&#34;&gt;https://leetcode.com/tag/binary-search/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;
Similar Questions:
&amp;ldquo;最接近的二叉搜索树值&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/closest-binary-search-tree-value/&#34;&gt;https://leetcode.com/problems/closest-binary-search-tree-value/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一棵&lt;strong&gt;完全二叉树&lt;/strong&gt; 的根节点 &lt;code&gt;root&lt;/code&gt; ，求出该树的节点个数。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91/7773232?fr=aladdin&#34;&gt;完全二叉树&lt;/a&gt; 的定义如下：在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的若干位置。若最底层为第 &lt;code&gt;h&lt;/code&gt; 层，则该层包含 &lt;code&gt;1~ 2h&lt;/code&gt; 个节点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [1,2,3,4,5,6]
输出：6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = []
输出：0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [1]
输出：1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树中节点的数目范围是&lt;code&gt;[0, 5 * 104]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= Node.val &amp;lt;= 5 * 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;题目数据保证输入的树是 &lt;strong&gt;完全二叉树&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**进阶：**遍历树来统计节点是一种时间复杂度为 &lt;code&gt;O(n)&lt;/code&gt; 的简单解决方案。你可以设计一个更快的算法吗？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[104] 二叉树的最大深度</title>
      <link>http://code.deqiang.wang/posts/leetcode104-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6/</link>
      <pubDate>Mon, 03 Jan 2022 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode104-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;广度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/breadth-first-search/&#34;&gt;https://leetcode.com/tag/breadth-first-search/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;
Similar Questions:
&amp;ldquo;平衡二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/balanced-binary-tree/&#34;&gt;https://leetcode.com/problems/balanced-binary-tree/&lt;/a&gt;
&amp;ldquo;二叉树的最小深度&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-depth-of-binary-tree/&#34;&gt;https://leetcode.com/problems/minimum-depth-of-binary-tree/&lt;/a&gt;
&amp;ldquo;N 叉树的最大深度&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-depth-of-n-ary-tree/&#34;&gt;https://leetcode.com/problems/maximum-depth-of-n-ary-tree/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个二叉树，找出其最大深度。&lt;/p&gt;
&lt;p&gt;二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明:&lt;/strong&gt; 叶子节点是指没有子节点的节点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;
给定二叉树 &lt;code&gt;[3,9,20,null,null,15,7]&lt;/code&gt;，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;3
   / \
  9  20
    /  \
   15   7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;返回它的最大深度 3 。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[459] 重复的子字符串</title>
      <link>http://code.deqiang.wang/posts/leetcode459-%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Wed, 29 Dec 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode459-%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt;
&amp;ldquo;字符串匹配&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string-matching/&#34;&gt;https://leetcode.com/tag/string-matching/&lt;/a&gt;
Similar Questions:
&amp;ldquo;实现 strStr()&amp;quot;: &lt;a href=&#34;https://leetcode.com/problems/implement-strstr/&#34;&gt;https://leetcode.com/problems/implement-strstr/&lt;/a&gt;
&amp;ldquo;重复叠加字符串匹配&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/repeated-string-match/&#34;&gt;https://leetcode.com/problems/repeated-string-match/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个非空的字符串，判断它是否可以由它的一个子串重复多次构成。给定的字符串只含有小写英文字母，并且长度不超过10000。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: &amp;#34;abab&amp;#34;

输出: True

解释: 可由子字符串 &amp;#34;ab&amp;#34; 重复两次构成。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: &amp;#34;aba&amp;#34;

输出: False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: &amp;#34;abcabcabcabc&amp;#34;

输出: True

解释: 可由子字符串 &amp;#34;abc&amp;#34; 重复四次构成。 (或者子字符串 &amp;#34;abcabc&amp;#34; 重复两次构成。)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[102] 二叉树的层序遍历</title>
      <link>http://code.deqiang.wang/posts/leetcode102-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</link>
      <pubDate>Tue, 28 Dec 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode102-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;广度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/breadth-first-search/&#34;&gt;https://leetcode.com/tag/breadth-first-search/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;
Similar Questions:
&amp;ldquo;二叉树的锯齿形层序遍历&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/&#34;&gt;https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/&lt;/a&gt;
&amp;ldquo;二叉树的层序遍历 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/binary-tree-level-order-traversal-ii/&#34;&gt;https://leetcode.com/problems/binary-tree-level-order-traversal-ii/&lt;/a&gt;
&amp;ldquo;二叉树的最小深度&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-depth-of-binary-tree/&#34;&gt;https://leetcode.com/problems/minimum-depth-of-binary-tree/&lt;/a&gt;
&amp;ldquo;二叉树的垂直遍历&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/binary-tree-vertical-order-traversal/&#34;&gt;https://leetcode.com/problems/binary-tree-vertical-order-traversal/&lt;/a&gt;
&amp;ldquo;二叉树的层平均值&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/average-of-levels-in-binary-tree/&#34;&gt;https://leetcode.com/problems/average-of-levels-in-binary-tree/&lt;/a&gt;
&amp;ldquo;N 叉树的层序遍历&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/n-ary-tree-level-order-traversal/&#34;&gt;https://leetcode.com/problems/n-ary-tree-level-order-traversal/&lt;/a&gt;
&amp;ldquo;二叉树的堂兄弟节点&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/cousins-in-binary-tree/&#34;&gt;https://leetcode.com/problems/cousins-in-binary-tree/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个二叉树，请你返回其按 &lt;strong&gt;层序遍历&lt;/strong&gt; 得到的节点值。 （即逐层地，从左到右访问所有节点）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;
二叉树：&lt;code&gt;[3,9,20,null,null,15,7]&lt;/code&gt;,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;3
   / \
  9  20
    /  \
   15   7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;返回其层序遍历结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[
  [3],
  [9,20],
  [15,7]
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[101] 对称二叉树</title>
      <link>http://code.deqiang.wang/posts/leetcode101-%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Mon, 27 Dec 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode101-%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;广度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/breadth-first-search/&#34;&gt;https://leetcode.com/tag/breadth-first-search/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个二叉树，检查它是否是镜像对称的。&lt;/p&gt;
&lt;p&gt;例如，二叉树 &lt;code&gt;[1,2,2,3,4,4,3]&lt;/code&gt; 是对称的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1
   / \
  2   2
 / \ / \
3  4 4  3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是下面这个 &lt;code&gt;[1,2,2,null,3,null,3]&lt;/code&gt; 则不是镜像对称的:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1
   / \
  2   2
   \   \
   3    3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;进阶：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你可以运用递归和迭代两种方法解决这个问题吗？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[59] 螺旋矩阵II</title>
      <link>http://code.deqiang.wang/posts/leetcode59-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5ii/</link>
      <pubDate>Sun, 26 Dec 2021 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode59-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5ii/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;矩阵&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/matrix/&#34;&gt;https://leetcode.com/tag/matrix/&lt;/a&gt;
&amp;ldquo;模拟&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/simulation/&#34;&gt;https://leetcode.com/tag/simulation/&lt;/a&gt;
Similar Questions:
&amp;ldquo;螺旋矩阵&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/spiral-matrix/&#34;&gt;https://leetcode.com/problems/spiral-matrix/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个正整数 &lt;code&gt;n&lt;/code&gt; ，生成一个包含 &lt;code&gt;1&lt;/code&gt; 到 &lt;code&gt;n2&lt;/code&gt; 所有元素，且元素按顺时针顺序螺旋排列的 &lt;code&gt;n x n&lt;/code&gt; 正方形矩阵 &lt;code&gt;matrix&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：n = 3
输出：[[1,2,3],[8,9,4],[7,6,5]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：n = 1
输出：[[1]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= n &amp;lt;= 20&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[200] 岛屿数量</title>
      <link>http://code.deqiang.wang/posts/leetcode200-%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F/</link>
      <pubDate>Sun, 19 Dec 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode200-%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;广度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/breadth-first-search/&#34;&gt;https://leetcode.com/tag/breadth-first-search/&lt;/a&gt;
&amp;ldquo;并查集&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/union-find/&#34;&gt;https://leetcode.com/tag/union-find/&lt;/a&gt;
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;矩阵&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/matrix/&#34;&gt;https://leetcode.com/tag/matrix/&lt;/a&gt;
Similar Questions:
&amp;ldquo;被围绕的区域&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/surrounded-regions/&#34;&gt;https://leetcode.com/problems/surrounded-regions/&lt;/a&gt;
&amp;ldquo;墙与门&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/walls-and-gates/&#34;&gt;https://leetcode.com/problems/walls-and-gates/&lt;/a&gt;
&amp;ldquo;岛屿数量 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/number-of-islands-ii/&#34;&gt;https://leetcode.com/problems/number-of-islands-ii/&lt;/a&gt;
&amp;ldquo;无向图中连通分量的数目&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/&#34;&gt;https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/&lt;/a&gt;
&amp;ldquo;不同岛屿的数量&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/number-of-distinct-islands/&#34;&gt;https://leetcode.com/problems/number-of-distinct-islands/&lt;/a&gt;
&amp;ldquo;岛屿的最大面积&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/max-area-of-island/&#34;&gt;https://leetcode.com/problems/max-area-of-island/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个由 &lt;code&gt;&#39;1&#39;&lt;/code&gt;（陆地）和 &lt;code&gt;&#39;0&#39;&lt;/code&gt;（水）组成的的二维网格，请你计算网格中岛屿的数量。&lt;/p&gt;
&lt;p&gt;岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。&lt;/p&gt;
&lt;p&gt;此外，你可以假设该网格的四条边均被水包围。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：grid = [
  [&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;],
  [&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;],
  [&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;],
  [&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;]
]
输出：1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：grid = [
  [&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;],
  [&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;],
  [&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;],
  [&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;]
]
输出：3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;m == grid.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n == grid[i].length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= m, n &amp;lt;= 300&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid[i][j]&lt;/code&gt; 的值为 &lt;code&gt;&#39;0&#39;&lt;/code&gt; 或 `&amp;lsquo;1&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[209] 长度最小的子数组</title>
      <link>http://code.deqiang.wang/posts/leetcode209-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</link>
      <pubDate>Tue, 14 Dec 2021 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode209-%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;二分查找&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-search/&#34;&gt;https://leetcode.com/tag/binary-search/&lt;/a&gt;
&amp;ldquo;前缀和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/prefix-sum/&#34;&gt;https://leetcode.com/tag/prefix-sum/&lt;/a&gt;
&amp;ldquo;滑动窗口&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/sliding-window/&#34;&gt;https://leetcode.com/tag/sliding-window/&lt;/a&gt;
Similar Questions:
&amp;ldquo;最小覆盖子串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-window-substring/&#34;&gt;https://leetcode.com/problems/minimum-window-substring/&lt;/a&gt;
&amp;ldquo;和等于 k 的最长子数组长度&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-size-subarray-sum-equals-k/&#34;&gt;https://leetcode.com/problems/maximum-size-subarray-sum-equals-k/&lt;/a&gt;
&amp;ldquo;最长重复子数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-length-of-repeated-subarray/&#34;&gt;https://leetcode.com/problems/maximum-length-of-repeated-subarray/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个含有 &lt;code&gt;n&lt;/code&gt;个正整数的数组和一个正整数 &lt;code&gt;target&lt;/code&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;找出该数组中满足其和&lt;code&gt;≥ target&lt;/code&gt;的长度最小的 &lt;strong&gt;连续子数组&lt;/strong&gt; &lt;code&gt;[numsl, numsl+1, ..., numsr-1, numsr]&lt;/code&gt; ，并返回其长度**。**如果不存在符合条件的子数组，返回 &lt;code&gt;0&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：target = 7, nums = [2,3,1,2,4,3]
输出：2
解释：子数组 [4,3] 是该条件下的长度最小的子数组。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：target = 4, nums = [1,4,4]
输出：1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：target = 11, nums = [1,1,1,1,1,1,1,1]
输出：0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= target &amp;lt;= 109&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums[i] &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进阶：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你已经实现&lt;code&gt;O(n)&lt;/code&gt; 时间复杂度的解法, 请尝试设计一个 &lt;code&gt;O(n log(n))&lt;/code&gt; 时间复杂度的解法。[&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[300] 最长递增子序列</title>
      <link>http://code.deqiang.wang/posts/leetcode300-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97-/</link>
      <pubDate>Sun, 12 Dec 2021 22:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode300-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97-/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;二分查找&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-search/&#34;&gt;https://leetcode.com/tag/binary-search/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;递增的三元子序列&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/increasing-triplet-subsequence/&#34;&gt;https://leetcode.com/problems/increasing-triplet-subsequence/&lt;/a&gt;
&amp;ldquo;俄罗斯套娃信封问题&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/russian-doll-envelopes/&#34;&gt;https://leetcode.com/problems/russian-doll-envelopes/&lt;/a&gt;
&amp;ldquo;最长数对链&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-length-of-pair-chain/&#34;&gt;https://leetcode.com/problems/maximum-length-of-pair-chain/&lt;/a&gt;
&amp;ldquo;最长递增子序列的个数&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/number-of-longest-increasing-subsequence/&#34;&gt;https://leetcode.com/problems/number-of-longest-increasing-subsequence/&lt;/a&gt;
&amp;ldquo;两个字符串的最小ASCII删除和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/&#34;&gt;https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个整数数组 &lt;code&gt;nums&lt;/code&gt; ，找到其中最长严格递增子序列的长度。&lt;/p&gt;
&lt;p&gt;子序列是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，&lt;code&gt;[3,6,2,7]&lt;/code&gt; 是数组 &lt;code&gt;[0,3,1,6,2,2,7]&lt;/code&gt; 的子序列。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [10,9,2,5,3,7,101,18]
输出：4
解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [0,1,0,3,2,3]
输出：4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [7,7,7,7,7,7,7]
输出：1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 2500&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-104 &amp;lt;= nums[i] &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进阶：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你可以设计时间复杂度为 &lt;code&gt;O(n2)&lt;/code&gt; 的解决方案吗？&lt;/li&gt;
&lt;li&gt;你能将算法的时间复杂度降低到 &lt;code&gt;O(n log(n))&lt;/code&gt; 吗?&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[1143] 最长公共子序列</title>
      <link>http://code.deqiang.wang/posts/leetcode1143-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sat, 11 Dec 2021 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode1143-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定两个字符串 &lt;code&gt;text1&lt;/code&gt; 和 &lt;code&gt;text2&lt;/code&gt;，返回这两个字符串的最长 &lt;strong&gt;公共子序列&lt;/strong&gt; 的长度。如果不存在 &lt;strong&gt;公共子序列&lt;/strong&gt; ，返回 &lt;code&gt;0&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;一个字符串的 &lt;strong&gt;子序列&lt;/strong&gt;是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例如，&lt;code&gt;&amp;quot;ace&amp;quot;&lt;/code&gt; 是 &lt;code&gt;&amp;quot;abcde&amp;quot;&lt;/code&gt; 的子序列，但 &lt;code&gt;&amp;quot;aec&amp;quot;&lt;/code&gt; 不是 &lt;code&gt;&amp;quot;abcde&amp;quot;&lt;/code&gt; 的子序列。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个字符串的 &lt;strong&gt;公共子序列&lt;/strong&gt; 是这两个字符串所共同拥有的子序列。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：text1 = &amp;#34;abcde&amp;#34;, text2 = &amp;#34;ace&amp;#34; 
输出：3  
解释：最长公共子序列是 &amp;#34;ace&amp;#34; ，它的长度为 3 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：text1 = &amp;#34;abc&amp;#34;, text2 = &amp;#34;abc&amp;#34;
输出：3
解释：最长公共子序列是 &amp;#34;abc&amp;#34; ，它的长度为 3 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：text1 = &amp;#34;abc&amp;#34;, text2 = &amp;#34;def&amp;#34;
输出：0
解释：两个字符串没有公共子序列，返回 0 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= text1.length, text2.length &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;text1&lt;/code&gt; 和 &lt;code&gt;text2&lt;/code&gt; 仅由小写英文字符组成。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[496] 下一个更大元素 I</title>
      <link>http://code.deqiang.wang/posts/leetcode496-%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0-i/</link>
      <pubDate>Fri, 10 Dec 2021 17:05:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode496-%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0-i/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;栈&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/stack/&#34;&gt;https://leetcode.com/tag/stack/&lt;/a&gt;
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;哈希表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/hash-table/&#34;&gt;https://leetcode.com/tag/hash-table/&lt;/a&gt;
&amp;ldquo;单调栈&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/monotonic-stack/&#34;&gt;https://leetcode.com/tag/monotonic-stack/&lt;/a&gt;
Similar Questions:
&amp;ldquo;下一个更大元素 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/next-greater-element-ii/&#34;&gt;https://leetcode.com/problems/next-greater-element-ii/&lt;/a&gt;
&amp;ldquo;下一个更大元素 III&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/next-greater-element-iii/&#34;&gt;https://leetcode.com/problems/next-greater-element-iii/&lt;/a&gt;
&amp;ldquo;每日温度&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/daily-temperatures/&#34;&gt;https://leetcode.com/problems/daily-temperatures/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你两个&lt;strong&gt;没有重复元素&lt;/strong&gt; 的数组 &lt;code&gt;nums1&lt;/code&gt; 和 &lt;code&gt;nums2&lt;/code&gt; ，其中&lt;code&gt;nums1&lt;/code&gt; 是 &lt;code&gt;nums2&lt;/code&gt; 的子集。&lt;/p&gt;
&lt;p&gt;请你找出 &lt;code&gt;nums1&lt;/code&gt; 中每个元素在 &lt;code&gt;nums2&lt;/code&gt; 中的下一个比其大的值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nums1&lt;/code&gt; 中数字 &lt;code&gt;x&lt;/code&gt; 的下一个更大元素是指 &lt;code&gt;x&lt;/code&gt; 在 &lt;code&gt;nums2&lt;/code&gt; 中对应位置的右边的第一个比 &lt;code&gt;x&lt;/code&gt;大的元素。如果不存在，对应位置输出 &lt;code&gt;-1&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: nums1 = [4,1,2], nums2 = [1,3,4,2].
输出: [-1,3,-1]
解释:
    对于 num1 中的数字 4 ，你无法在第二个数组中找到下一个更大的数字，因此输出 -1 。
    对于 num1 中的数字 1 ，第二个数组中数字1右边的下一个较大数字是 3 。
    对于 num1 中的数字 2 ，第二个数组中没有下一个更大的数字，因此输出 -1 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: nums1 = [2,4], nums2 = [1,2,3,4].
输出: [3,-1]
解释:
    对于 num1 中的数字 2 ，第二个数组中的下一个较大数字是 3 。
    对于 num1 中的数字 4 ，第二个数组中没有下一个更大的数字，因此输出 -1 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums1.length &amp;lt;= nums2.length &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums1[i], nums2[i] &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nums1&lt;/code&gt;和&lt;code&gt;nums2&lt;/code&gt;中所有整数 &lt;strong&gt;互不相同&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nums1&lt;/code&gt; 中的所有整数同样出现在 &lt;code&gt;nums2&lt;/code&gt; 中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**进阶：**你可以设计一个时间复杂度为 &lt;code&gt;O(nums1.length + nums2.length)&lt;/code&gt; 的解决方案吗？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[406] 根据身高重建队列</title>
      <link>http://code.deqiang.wang/posts/leetcode406-%E6%A0%B9%E6%8D%AE%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97/</link>
      <pubDate>Mon, 06 Dec 2021 17:05:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode406-%E6%A0%B9%E6%8D%AE%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;贪心&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/greedy/&#34;&gt;https://leetcode.com/tag/greedy/&lt;/a&gt;
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;排序&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/sorting/&#34;&gt;https://leetcode.com/tag/sorting/&lt;/a&gt;
Similar Questions:
&amp;ldquo;计算右侧小于当前元素的个数&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/count-of-smaller-numbers-after-self/&#34;&gt;https://leetcode.com/problems/count-of-smaller-numbers-after-self/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;假设有打乱顺序的一群人站成一个队列，数组 &lt;code&gt;people&lt;/code&gt; 表示队列中一些人的属性（不一定按顺序）。每个 &lt;code&gt;people[i] = [hi, ki]&lt;/code&gt; 表示第 &lt;code&gt;i&lt;/code&gt; 个人的身高为 &lt;code&gt;hi&lt;/code&gt; ，前面 &lt;strong&gt;正好&lt;/strong&gt; 有 &lt;code&gt;ki&lt;/code&gt; 个身高大于或等于 &lt;code&gt;hi&lt;/code&gt; 的人。&lt;/p&gt;
&lt;p&gt;请你重新构造并返回输入数组 &lt;code&gt;people&lt;/code&gt; 所表示的队列。返回的队列应该格式化为数组 &lt;code&gt;queue&lt;/code&gt; ，其中 &lt;code&gt;queue[j] = [hj, kj]&lt;/code&gt; 是队列中第 &lt;code&gt;j&lt;/code&gt; 个人的属性（&lt;code&gt;queue[0]&lt;/code&gt; 是排在队列前面的人）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：people = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]
输出：[[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]
解释：
编号为 0 的人身高为 5 ，没有身高更高或者相同的人排在他前面。
编号为 1 的人身高为 7 ，没有身高更高或者相同的人排在他前面。
编号为 2 的人身高为 5 ，有 2 个身高更高或者相同的人排在他前面，即编号为 0 和 1 的人。
编号为 3 的人身高为 6 ，有 1 个身高更高或者相同的人排在他前面，即编号为 1 的人。
编号为 4 的人身高为 4 ，有 4 个身高更高或者相同的人排在他前面，即编号为 0、1、2、3 的人。
编号为 5 的人身高为 7 ，有 1 个身高更高或者相同的人排在他前面，即编号为 1 的人。
因此 [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] 是重新构造后的队列。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：people = [[6,0],[5,0],[4,0],[3,2],[2,2],[1,4]]
输出：[[4,0],[5,0],[2,2],[3,2],[1,4],[6,0]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= people.length &amp;lt;= 2000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= hi &amp;lt;= 106&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= ki &amp;lt; people.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;题目数据确保队列可以被重建&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[114] 二叉树展开为链表</title>
      <link>http://code.deqiang.wang/posts/leetcode114-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Sun, 05 Dec 2021 17:05:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode114-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;栈&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/stack/&#34;&gt;https://leetcode.com/tag/stack/&lt;/a&gt;
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/linked-list/&#34;&gt;https://leetcode.com/tag/linked-list/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;
Similar Questions:
&amp;ldquo;扁平化多级双向链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/&#34;&gt;https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你二叉树的根结点 &lt;code&gt;root&lt;/code&gt; ，请你将它展开为一个单链表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;展开后的单链表应该同样使用 &lt;code&gt;TreeNode&lt;/code&gt; ，其中 &lt;code&gt;right&lt;/code&gt; 子指针指向链表中下一个结点，而左子指针始终为 &lt;code&gt;null&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;展开后的单链表应该与二叉树 &lt;a href=&#34;https://baike.baidu.com/item/%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86/6442839?fr=aladdin&#34;&gt;&lt;strong&gt;先序遍历&lt;/strong&gt;&lt;/a&gt; 顺序相同。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [1,2,5,3,4,null,6]
输出：[1,null,2,null,3,null,4,null,5,null,6]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = []
输出：[]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [0]
输出：[0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树中结点数在范围 &lt;code&gt;[0, 2000]&lt;/code&gt; 内&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-100 &amp;lt;= Node.val &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**进阶：**你可以使用原地算法（&lt;code&gt;O(1)&lt;/code&gt; 额外空间）展开这棵树吗？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[198] 打家劫舍</title>
      <link>http://code.deqiang.wang/posts/leetcode198-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/</link>
      <pubDate>Sat, 04 Dec 2021 17:05:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode198-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;乘积最大子数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-product-subarray/&#34;&gt;https://leetcode.com/problems/maximum-product-subarray/&lt;/a&gt;
&amp;ldquo;打家劫舍 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/house-robber-ii/&#34;&gt;https://leetcode.com/problems/house-robber-ii/&lt;/a&gt;
&amp;ldquo;粉刷房子&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/paint-house/&#34;&gt;https://leetcode.com/problems/paint-house/&lt;/a&gt;
&amp;ldquo;栅栏涂色&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/paint-fence/&#34;&gt;https://leetcode.com/problems/paint-fence/&lt;/a&gt;
&amp;ldquo;打家劫舍 III&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/house-robber-iii/&#34;&gt;https://leetcode.com/problems/house-robber-iii/&lt;/a&gt;
&amp;ldquo;不含连续1的非负整数&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/&#34;&gt;https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/&lt;/a&gt;
&amp;ldquo;金币路径&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/coin-path/&#34;&gt;https://leetcode.com/problems/coin-path/&lt;/a&gt;
&amp;ldquo;删除并获得点数&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/delete-and-earn/&#34;&gt;https://leetcode.com/problems/delete-and-earn/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，&lt;strong&gt;如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;给定一个代表每个房屋存放金额的非负整数数组，计算你&lt;strong&gt;不触动警报装置的情况下&lt;/strong&gt;，一夜之内能够偷窃到的最高金额。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：[1,2,3,1]
输出：4
解释：偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。
     偷窃到的最高金额 = 1 + 3 = 4 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：[2,7,9,3,1]
输出：12
解释：偷窃 1 号房屋 (金额 = 2), 偷窃 3 号房屋 (金额 = 9)，接着偷窃 5 号房屋 (金额 = 1)。
     偷窃到的最高金额 = 2 + 9 + 1 = 12 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums[i] &amp;lt;= 400&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[283] 移动零</title>
      <link>http://code.deqiang.wang/posts/leetcode283-%E7%A7%BB%E5%8A%A8%E9%9B%B6/</link>
      <pubDate>Fri, 03 Dec 2021 17:05:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode283-%E7%A7%BB%E5%8A%A8%E9%9B%B6/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;双指针&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/two-pointers/&#34;&gt;https://leetcode.com/tag/two-pointers/&lt;/a&gt;
Similar Questions:
&amp;ldquo;移除元素&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/remove-element/&#34;&gt;https://leetcode.com/problems/remove-element/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个数组 &lt;code&gt;nums&lt;/code&gt;，编写一个函数将所有 &lt;code&gt;0&lt;/code&gt; 移动到数组的末尾，同时保持非零元素的相对顺序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: [0,1,0,3,12]
输出: [1,3,12,0,0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;必须在原数组上操作，不能拷贝额外的数组。&lt;/li&gt;
&lt;li&gt;尽量减少操作次数。&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[27] 移除元素</title>
      <link>http://code.deqiang.wang/posts/leetcode27-%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</link>
      <pubDate>Thu, 02 Dec 2021 17:05:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode27-%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;双指针&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/two-pointers/&#34;&gt;https://leetcode.com/tag/two-pointers/&lt;/a&gt;
Similar Questions:
&amp;ldquo;删除有序数组中的重复项&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/remove-duplicates-from-sorted-array/&#34;&gt;https://leetcode.com/problems/remove-duplicates-from-sorted-array/&lt;/a&gt;
&amp;ldquo;移除链表元素&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/remove-linked-list-elements/&#34;&gt;https://leetcode.com/problems/remove-linked-list-elements/&lt;/a&gt;
&amp;ldquo;移动零&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/move-zeroes/&#34;&gt;https://leetcode.com/problems/move-zeroes/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个数组 &lt;code&gt;nums&lt;/code&gt;和一个值 &lt;code&gt;val&lt;/code&gt;，你需要 &lt;strong&gt;原地&lt;/strong&gt; 移除所有数值等于 &lt;code&gt;val&lt;/code&gt;的元素，并返回移除后数组的新长度。&lt;/p&gt;
&lt;p&gt;不要使用额外的数组空间，你必须仅使用 &lt;code&gt;O(1)&lt;/code&gt; 额外空间并 &lt;strong&gt;原地 修改输入数组&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为什么返回数值是整数，但输出的答案是数组呢?&lt;/p&gt;
&lt;p&gt;请注意，输入数组是以**「引用」**方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。&lt;/p&gt;
&lt;p&gt;你可以想象内部操作如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;// nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝
int len = removeElement(nums, val);

// 在函数里修改输入数组对于调用者是可见的。
// 根据你的函数返回的长度, 它会打印出数组中 该长度范围内 的所有元素。
for (int i = 0; i &amp;lt; len; i++) {
    print(nums[i]);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [3,2,2,3], val = 3
输出：2, nums = [2,2]
解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [0,1,2,2,3,0,4,2], val = 2
输出：5, nums = [0,1,4,0,3]
解释：函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。注意这五个元素可为任意顺序。你不需要考虑数组中超出新长度后面的元素。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums.length &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums[i] &amp;lt;= 50&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= val &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[55] 跳跃游戏</title>
      <link>http://code.deqiang.wang/posts/leetcode55-%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Thu, 02 Dec 2021 17:05:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode55-%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;贪心&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/greedy/&#34;&gt;https://leetcode.com/tag/greedy/&lt;/a&gt;
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;跳跃游戏 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/jump-game-ii/&#34;&gt;https://leetcode.com/problems/jump-game-ii/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个非负整数数组 &lt;code&gt;nums&lt;/code&gt; ，你最初位于数组的 &lt;strong&gt;第一个下标&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;数组中的每个元素代表你在该位置可以跳跃的最大长度。&lt;/p&gt;
&lt;p&gt;判断你是否能够到达最后一个下标。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [2,3,1,1,4]
输出：true
解释：可以先跳 1 步，从下标 0 到达下标 1, 然后再从下标 1 跳 3 步到达最后一个下标。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [3,2,1,0,4]
输出：false
解释：无论怎样，总会到达下标为 3 的位置。但该下标的最大跳跃长度是 0 ， 所以永远不可能到达最后一个下标。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 3 * 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums[i] &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;solution&#34;&gt;
  Solution:
  &lt;a class=&#34;heading-link&#34; href=&#34;#solution&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[704] 二分查找</title>
      <link>http://code.deqiang.wang/posts/leetcode704-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link>
      <pubDate>Mon, 29 Nov 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode704-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;二分查找&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-search/&#34;&gt;https://leetcode.com/tag/binary-search/&lt;/a&gt;
Similar Questions:
&amp;ldquo;搜索长度未知的有序数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/search-in-a-sorted-array-of-unknown-size/&#34;&gt;https://leetcode.com/problems/search-in-a-sorted-array-of-unknown-size/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个 &lt;code&gt;n&lt;/code&gt; 个元素有序的（升序）整型数组 &lt;code&gt;nums&lt;/code&gt; 和一个目标值 &lt;code&gt;target&lt;/code&gt;  ，写一个函数搜索 &lt;code&gt;nums&lt;/code&gt; 中的 &lt;code&gt;target&lt;/code&gt;，如果目标值存在返回下标，否则返回 &lt;code&gt;-1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: nums = [-1,0,3,5,9,12], target = 9
输出: 4
解释: 9 出现在 nums 中并且下标为 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: nums = [-1,0,3,5,9,12], target = 2
输出: -1
解释: 2 不存在 nums 中因此返回 -1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;你可以假设 &lt;code&gt;nums&lt;/code&gt; 中的所有元素是不重复的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt; 将在 &lt;code&gt;[1, 10000]&lt;/code&gt;之间。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nums&lt;/code&gt; 的每个元素都将在 &lt;code&gt;[-9999, 9999]&lt;/code&gt;之间。&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[445] 两数相加 II</title>
      <link>http://code.deqiang.wang/posts/leetcode445-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0-ii/</link>
      <pubDate>Tue, 23 Nov 2021 12:02:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode445-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0-ii/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;栈&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/stack/&#34;&gt;https://leetcode.com/tag/stack/&lt;/a&gt;
&amp;ldquo;链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/linked-list/&#34;&gt;https://leetcode.com/tag/linked-list/&lt;/a&gt;
&amp;ldquo;数学&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/math/&#34;&gt;https://leetcode.com/tag/math/&lt;/a&gt;
Similar Questions:
&amp;ldquo;两数相加&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/add-two-numbers/&#34;&gt;https://leetcode.com/problems/add-two-numbers/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你两个 &lt;strong&gt;非空&lt;/strong&gt;链表来代表两个非负整数。数字最高位位于链表开始位置。它们的每个节点只存储一位数字。将这两数相加会返回一个新的链表。&lt;/p&gt;
&lt;p&gt;你可以假设除了数字 0 之外，这两个数字都不会以零开头。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：l1 = [7,2,4,3], l2 = [5,6,4]
输出：[7,8,0,7]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：l1 = [2,4,3], l2 = [5,6,4]
输出：[8,0,7]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：l1 = [0], l2 = [0]
输出：[0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;链表的长度范围为&lt;code&gt;[1, 100]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= node.val &amp;lt;= 9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;输入数据保证链表代表的数字无前导 0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**进阶：**如果输入链表不能修改该如何处理？换句话说，不能对列表中的节点进行翻转。&lt;/p&gt;
&lt;h3 id=&#34;solution&#34;&gt;
  Solution:
  &lt;a class=&#34;heading-link&#34; href=&#34;#solution&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Template generated via &lt;a href=&#34;https://github.com/crimx/crx-leetmark&#34;&gt;Leetmark&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[128] 最长连续序列</title>
      <link>http://code.deqiang.wang/posts/leetcode128-%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sun, 14 Nov 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode128-%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;并查集&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/union-find/&#34;&gt;https://leetcode.com/tag/union-find/&lt;/a&gt;
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;哈希表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/hash-table/&#34;&gt;https://leetcode.com/tag/hash-table/&lt;/a&gt;
Similar Questions:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;二叉树最长连续序列&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/binary-tree-longest-consecutive-sequence/&#34;&gt;https://leetcode.com/problems/binary-tree-longest-consecutive-sequence/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个未排序的整数数组 &lt;code&gt;nums&lt;/code&gt; ，找出数字连续的最长序列（不要求序列元素在原数组中连续）的长度。&lt;/p&gt;
&lt;p&gt;请你设计并实现时间复杂度为 &lt;code&gt;O(n)&lt;/code&gt;的算法解决此问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [100,4,200,1,3,2]
输出：4
解释：最长数字连续序列是 [1, 2, 3, 4]。它的长度为 4。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [0,3,7,2,5,8,4,6,0,1]
输出：9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums.length &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-109 &amp;lt;= nums[i] &amp;lt;= 109&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;solution&#34;&gt;
  Solution:
  &lt;a class=&#34;heading-link&#34; href=&#34;#solution&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Template generated via &lt;a href=&#34;https://github.com/crimx/crx-leetmark&#34;&gt;Leetmark&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[46] 全排列</title>
      <link>http://code.deqiang.wang/posts/leetcode46-%E5%85%A8%E6%8E%92%E5%88%97/</link>
      <pubDate>Wed, 06 Oct 2021 21:03:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode46-%E5%85%A8%E6%8E%92%E5%88%97/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;回溯&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/backtracking/&#34;&gt;https://leetcode.com/tag/backtracking/&lt;/a&gt;
Similar Questions:
&amp;ldquo;下一个排列&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/next-permutation/&#34;&gt;https://leetcode.com/problems/next-permutation/&lt;/a&gt;
&amp;ldquo;全排列 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/permutations-ii/&#34;&gt;https://leetcode.com/problems/permutations-ii/&lt;/a&gt;
&amp;ldquo;排列序列&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/permutation-sequence/&#34;&gt;https://leetcode.com/problems/permutation-sequence/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;组合-httpsleetcodecomproblemscombinations&#34;&gt;
  &amp;ldquo;组合&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/combinations/&#34;&gt;https://leetcode.com/problems/combinations/&lt;/a&gt;
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%bb%84%e5%90%88-httpsleetcodecomproblemscombinations&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个不含重复数字的数组 &lt;code&gt;nums&lt;/code&gt; ，返回其 &lt;strong&gt;所有可能的全排列&lt;/strong&gt; 。你可以 &lt;strong&gt;按任意顺序&lt;/strong&gt; 返回答案。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [1,2,3]
输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [0,1]
输出：[[0,1],[1,0]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [1]
输出：[[1]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-10 &amp;lt;= nums[i] &amp;lt;= 10&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nums&lt;/code&gt; 中的所有整数 &lt;strong&gt;互不相同&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[42] 接雨水</title>
      <link>http://code.deqiang.wang/posts/leetcode42-%E6%8E%A5%E9%9B%A8%E6%B0%B4/</link>
      <pubDate>Tue, 05 Oct 2021 21:03:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode42-%E6%8E%A5%E9%9B%A8%E6%B0%B4/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;栈&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/stack/&#34;&gt;https://leetcode.com/tag/stack/&lt;/a&gt;
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;双指针&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/two-pointers/&#34;&gt;https://leetcode.com/tag/two-pointers/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
&amp;ldquo;单调栈&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/monotonic-stack/&#34;&gt;https://leetcode.com/tag/monotonic-stack/&lt;/a&gt;
Similar Questions:
&amp;ldquo;盛最多水的容器&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/container-with-most-water/&#34;&gt;https://leetcode.com/problems/container-with-most-water/&lt;/a&gt;
&amp;ldquo;除自身以外数组的乘积&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/product-of-array-except-self/&#34;&gt;https://leetcode.com/problems/product-of-array-except-self/&lt;/a&gt;
&amp;ldquo;接雨水 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/trapping-rain-water-ii/&#34;&gt;https://leetcode.com/problems/trapping-rain-water-ii/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;倒水-httpsleetcodecomproblemspour-water&#34;&gt;
  &amp;ldquo;倒水&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/pour-water/&#34;&gt;https://leetcode.com/problems/pour-water/&lt;/a&gt;
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%80%92%e6%b0%b4-httpsleetcodecomproblemspour-water&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定 &lt;code&gt;n&lt;/code&gt; 个非负整数表示每个宽度为 &lt;code&gt;1&lt;/code&gt; 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：height = [0,1,0,2,1,0,1,3,2,1,2,1]
输出：6
解释：上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：height = [4,2,0,3,2,5]
输出：9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;n == height.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= n &amp;lt;= 2 * 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= height[i] &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[155] 最小栈</title>
      <link>http://code.deqiang.wang/posts/leetcode155-%E6%9C%80%E5%B0%8F%E6%A0%88/</link>
      <pubDate>Mon, 24 May 2021 14:36:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode155-%E6%9C%80%E5%B0%8F%E6%A0%88/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;栈&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/stack/&#34;&gt;https://leetcode.com/tag/stack/&lt;/a&gt;
&amp;ldquo;设计&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/design/&#34;&gt;https://leetcode.com/tag/design/&lt;/a&gt;
Similar Questions:
&amp;ldquo;滑动窗口最大值&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/sliding-window-maximum/&#34;&gt;https://leetcode.com/problems/sliding-window-maximum/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;最大栈-httpsleetcodecomproblemsmax-stack&#34;&gt;
  &amp;ldquo;最大栈&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/max-stack/&#34;&gt;https://leetcode.com/problems/max-stack/&lt;/a&gt;
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%9c%80%e5%a4%a7%e6%a0%88-httpsleetcodecomproblemsmax-stack&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;设计一个支持 &lt;code&gt;push&lt;/code&gt; ，&lt;code&gt;pop&lt;/code&gt; ，&lt;code&gt;top&lt;/code&gt; 操作，并能在常数时间内检索到最小元素的栈。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;push(x)&lt;/code&gt; —— 将元素 x 推入栈中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pop()&lt;/code&gt; —— 删除栈顶的元素。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;top()&lt;/code&gt; —— 获取栈顶元素。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getMin()&lt;/code&gt; —— 检索栈中的最小元素。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：
[&amp;#34;MinStack&amp;#34;,&amp;#34;push&amp;#34;,&amp;#34;push&amp;#34;,&amp;#34;push&amp;#34;,&amp;#34;getMin&amp;#34;,&amp;#34;pop&amp;#34;,&amp;#34;top&amp;#34;,&amp;#34;getMin&amp;#34;]
[[],[-2],[0],[-3],[],[],[],[]]

输出：
[null,null,null,null,-3,null,0,-2]

解释：
MinStack minStack = new MinStack();
minStack.push(-2);
minStack.push(0);
minStack.push(-3);
minStack.getMin();   --&amp;gt; 返回 -3.
minStack.pop();
minStack.top();      --&amp;gt; 返回 0.
minStack.getMin();   --&amp;gt; 返回 -2.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pop&lt;/code&gt;、&lt;code&gt;top&lt;/code&gt; 和 &lt;code&gt;getMin&lt;/code&gt; 操作总是在 &lt;strong&gt;非空栈&lt;/strong&gt; 上调用。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[718] 最长重复子数组</title>
      <link>http://code.deqiang.wang/posts/leetcode718-%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E6%95%B0%E7%BB%84/</link>
      <pubDate>Wed, 19 May 2021 21:36:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode718-%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;哈希表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/hash-table/&#34;&gt;https://leetcode.com/tag/hash-table/&lt;/a&gt;
&amp;ldquo;二分查找&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-search/&#34;&gt;https://leetcode.com/tag/binary-search/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;长度最小的子数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-size-subarray-sum/&#34;&gt;https://leetcode.com/problems/minimum-size-subarray-sum/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给两个整数数组 &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; ，返回两个数组中公共的、长度最长的子数组的长度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：
A: [1,2,3,2,1]
B: [3,2,1,4,7]
输出：3
解释：
长度最长的公共子数组是 [3, 2, 1] 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= len(A), len(B) &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= A[i], B[i] &amp;lt; 100&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[88] 合并两个有序数组</title>
      <link>http://code.deqiang.wang/posts/leetcode88-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</link>
      <pubDate>Wed, 28 Apr 2021 18:43:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode88-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;双指针&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/two-pointers/&#34;&gt;https://leetcode.com/tag/two-pointers/&lt;/a&gt;
Similar Questions:
&amp;ldquo;合并两个有序链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/merge-two-sorted-lists/&#34;&gt;https://leetcode.com/problems/merge-two-sorted-lists/&lt;/a&gt;
&amp;ldquo;有序数组的平方&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/squares-of-a-sorted-array/&#34;&gt;https://leetcode.com/problems/squares-of-a-sorted-array/&lt;/a&gt;
&amp;ldquo;区间列表的交集&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/interval-&#34;&gt;https://leetcode.com/problems/interval-&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你两个有序整数数组 &lt;code&gt;nums1&lt;/code&gt;和 &lt;code&gt;nums2&lt;/code&gt;，请你将 &lt;code&gt;nums2&lt;/code&gt;合并到 &lt;code&gt;nums1&lt;/code&gt;中*，*使 &lt;code&gt;nums1&lt;/code&gt;成为一个有序数组。&lt;/p&gt;
&lt;p&gt;初始化 &lt;code&gt;nums1&lt;/code&gt; 和 &lt;code&gt;nums2&lt;/code&gt; 的元素数量分别为 &lt;code&gt;m&lt;/code&gt; 和 &lt;code&gt;n&lt;/code&gt;。你可以假设 &lt;code&gt;nums1&lt;/code&gt;的空间大小等于 &lt;code&gt;m + n&lt;/code&gt;，这样它就有足够的空间保存来自 &lt;code&gt;nums2&lt;/code&gt; 的元素。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
输出：[1,2,2,3,5,6]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums1 = [1], m = 1, nums2 = [], n = 0
输出：[1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nums1.length == m + n&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nums2.length == n&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;0 &amp;lt;= m, n &amp;lt;= 200&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;1 &amp;lt;= m + n &amp;lt;= 200&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-109 &amp;lt;= nums1[i], nums2[i] &amp;lt;= 109&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[415]字符串相加</title>
      <link>http://code.deqiang.wang/posts/leetcode415-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0/</link>
      <pubDate>Sun, 25 Apr 2021 21:43:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode415-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt;
Similar Questions:
&amp;ldquo;两数相加&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/add-two-numbers/&#34;&gt;https://leetcode.com/problems/add-two-numbers/&lt;/a&gt;
&amp;ldquo;字符串相乘&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/multiply-strings/&#34;&gt;https://leetcode.com/problems/multiply-strings/&lt;/a&gt;
&amp;ldquo;数组形式的整数加法&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/add-to-array-form-of-integer/&#34;&gt;https://leetcode.com/problems/add-to-array-form-of-integer/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定两个字符串形式的非负整数 &lt;code&gt;num1&lt;/code&gt; 和&lt;code&gt;num2&lt;/code&gt; ，计算它们的和。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;num1&lt;/code&gt; 和&lt;code&gt;num2&lt;/code&gt; 的长度都小于 5100&lt;/li&gt;
&lt;li&gt;&lt;code&gt;num1&lt;/code&gt; 和&lt;code&gt;num2&lt;/code&gt; 都只包含数字 &lt;code&gt;0-9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;num1&lt;/code&gt; 和&lt;code&gt;num2&lt;/code&gt; 都不包含任何前导零&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;你不能使用任何內建 BigInteger 库， 也不能直接将输入的字符串转换为整数形式&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[141] 环形链表</title>
      <link>http://code.deqiang.wang/posts/leetcode141-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Sat, 24 Apr 2021 17:05:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode141-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/linked-list/&#34;&gt;https://leetcode.com/tag/linked-list/&lt;/a&gt;
&amp;ldquo;双指针&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/two-pointers/&#34;&gt;https://leetcode.com/tag/two-pointers/&lt;/a&gt;
Similar Questions:
&amp;ldquo;环形链表 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/linked-list-cycle-ii/&#34;&gt;https://leetcode.com/problems/linked-list-cycle-ii/&lt;/a&gt;
&amp;ldquo;快乐数&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/happy-number/&#34;&gt;https://leetcode.com/problems/happy-number/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个链表，判断链表中是否有环。&lt;/p&gt;
&lt;p&gt;如果链表中有某个节点，可以通过连续跟踪 &lt;code&gt;next&lt;/code&gt; 指针再次到达，则链表中存在环。 为了表示给定链表中的环，我们使用整数 &lt;code&gt;pos&lt;/code&gt; 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 &lt;code&gt;pos&lt;/code&gt; 是 &lt;code&gt;-1&lt;/code&gt;，则在该链表中没有环。&lt;strong&gt;注意：pos 不作为参数进行传递&lt;/strong&gt;，仅仅是为了标识链表的实际情况。&lt;/p&gt;
&lt;p&gt;如果链表中存在环，则返回 &lt;code&gt;true&lt;/code&gt; 。 否则，返回 &lt;code&gt;false&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进阶：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你能用 &lt;em&gt;O(1)&lt;/em&gt;（即，常量）内存解决此问题吗？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：head = [3,2,0,-4], pos = 1
输出：true
解释：链表中有一个环，其尾部连接到第二个节点。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：head = [1,2], pos = 0
输出：true
解释：链表中有一个环，其尾部连接到第一个节点。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：head = [1], pos = -1
输出：false
解释：链表中没有环。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;链表中节点的数目范围是 &lt;code&gt;[0, 104]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-105 &amp;lt;= Node.val &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pos&lt;/code&gt; 为 &lt;code&gt;-1&lt;/code&gt; 或者链表中的一个 &lt;strong&gt;有效索引&lt;/strong&gt; 。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[121] 买卖股票的最佳时机</title>
      <link>http://code.deqiang.wang/posts/leetcode121-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</link>
      <pubDate>Fri, 23 Apr 2021 21:03:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode121-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;最大子序和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-subarray/&#34;&gt;https://leetcode.com/problems/maximum-subarray/&lt;/a&gt;
&amp;ldquo;买卖股票的最佳时机 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/&#34;&gt;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/&lt;/a&gt;
&amp;ldquo;买卖股票的最佳时机 III&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/&#34;&gt;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/&lt;/a&gt;
&amp;ldquo;买卖股票的最佳时机 IV&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/&#34;&gt;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/&lt;/a&gt;
&amp;ldquo;最佳买卖股票时机含冷冻期&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/&#34;&gt;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个数组 &lt;code&gt;prices&lt;/code&gt; ，它的第 &lt;code&gt;i&lt;/code&gt; 个元素 &lt;code&gt;prices[i]&lt;/code&gt; 表示一支给定股票第 &lt;code&gt;i&lt;/code&gt; 天的价格。&lt;/p&gt;
&lt;p&gt;你只能选择 &lt;strong&gt;某一天&lt;/strong&gt; 买入这只股票，并选择在 &lt;strong&gt;未来的某一个不同的日子&lt;/strong&gt; 卖出该股票。设计一个算法来计算你所能获取的最大利润。&lt;/p&gt;
&lt;p&gt;返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 &lt;code&gt;0&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：[7,1,5,3,6,4]
输出：5
解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。
     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：prices = [7,6,4,3,1]
输出：0
解释：在这种情况下, 没有交易完成, 所以最大利润为 0。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= prices.length &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= prices[i] &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[53] 最大子序和</title>
      <link>http://code.deqiang.wang/posts/leetcode53-%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%92%8C/</link>
      <pubDate>Thu, 22 Apr 2021 21:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode53-%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%92%8C/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;分治算法&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/divide-and-conquer/&#34;&gt;https://leetcode.com/tag/divide-and-conquer/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;买卖股票的最佳时机&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/best-time-to-buy-and-sell-stock/&#34;&gt;https://leetcode.com/problems/best-time-to-buy-and-sell-stock/&lt;/a&gt;
&amp;ldquo;乘积最大子数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-product-subarray/&#34;&gt;https://leetcode.com/problems/maximum-product-subarray/&lt;/a&gt;
&amp;ldquo;数组的度&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/degree-of-an-array/&#34;&gt;https://leetcode.com/problems/degree-of-an-array/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;最长湍流子数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/longest-turbulent-subarray/&#34;&gt;https://leetcode.com/problems/longest-turbulent-subarray/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个整数数组 &lt;code&gt;nums&lt;/code&gt; ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [-2,1,-3,4,-1,2,1,-5,4]
输出：6
解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [1]
输出：1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [0]
输出：0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [-1]
输出：-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 5：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [-100000]
输出：-100000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 3 * 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-105 &amp;lt;= nums[i] &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**进阶：**如果你已经实现复杂度为 &lt;code&gt;O(n)&lt;/code&gt; 的解法，尝试使用更为精妙的 &lt;strong&gt;分治法&lt;/strong&gt; 求解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[26] 删除有序数组中的重复项</title>
      <link>http://code.deqiang.wang/posts/leetcode26-%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</link>
      <pubDate>Mon, 19 Apr 2021 16:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode26-%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt; &amp;ldquo;双指针&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/two-pointers/&#34;&gt;https://leetcode.com/tag/two-pointers/&lt;/a&gt; Similar Questions: &amp;ldquo;移除元素&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/remove-element/&#34;&gt;https://leetcode.com/problems/remove-element/&lt;/a&gt; &amp;ldquo;删除有序数组中的重复项 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/&#34;&gt;https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个有序数组 &lt;code&gt;nums&lt;/code&gt; ，请你&lt;strong&gt;原地&lt;/strong&gt; 删除重复出现的元素，使每个元素 &lt;strong&gt;只出现一次&lt;/strong&gt; ，返回删除后数组的新长度。&lt;/p&gt;
&lt;p&gt;不要使用额外的数组空间，你必须在 &lt;strong&gt;原地 修改输入数组&lt;/strong&gt;并在使用 O(1) 额外空间的条件下完成。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为什么返回数值是整数，但输出的答案是数组呢?&lt;/p&gt;
&lt;p&gt;请注意，输入数组是以**「引用」**方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。&lt;/p&gt;
&lt;p&gt;你可以想象内部操作如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;// nums 是以“引用”方式传递的。也就是说，不对实参做任何拷贝
int len = removeDuplicates(nums);

// 在函数里修改输入数组对于调用者是可见的。
// 根据你的函数返回的长度, 它会打印出数组中 该长度范围内 的所有元素。
for (int i = 0; i &amp;lt; len; i++) {
    print(nums[i]);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [1,1,2]
输出：2, nums = [1,2]
解释：函数应该返回新的长度 2 ，并且原数组 nums 的前两个元素被修改为 1, 2 。不需要考虑数组中超出新长度后面的元素。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [0,0,1,1,1,2,2,3,3,4]
输出：5, nums = [0,1,2,3,4]
解释：函数应该返回新的长度 5 ， 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4 。不需要考虑数组中超出新长度后面的元素。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums.length &amp;lt;= 3 * 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;104 &amp;lt;= nums[i] &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nums&lt;/code&gt; 已按升序排列&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[14] 最长公共前缀</title>
      <link>http://code.deqiang.wang/posts/leetcode14-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</link>
      <pubDate>Sun, 18 Apr 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode14-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;编写一个函数来查找字符串数组中的最长公共前缀。&lt;/p&gt;
&lt;p&gt;如果不存在公共前缀，返回空字符串 &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：strs = [&amp;#34;flower&amp;#34;,&amp;#34;flow&amp;#34;,&amp;#34;flight&amp;#34;]
输出：&amp;#34;fl&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：strs = [&amp;#34;dog&amp;#34;,&amp;#34;racecar&amp;#34;,&amp;#34;car&amp;#34;]
输出：&amp;#34;&amp;#34;
解释：输入不存在公共前缀。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= strs.length &amp;lt;= 200&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= strs[i].length &amp;lt;= 200&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strs[i]&lt;/code&gt; 仅由小写英文字母组成&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[15] 三数之和</title>
      <link>http://code.deqiang.wang/posts/leetcode15-%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
      <pubDate>Sat, 10 Apr 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode15-%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt; &amp;ldquo;双指针&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/two-pointers/&#34;&gt;https://leetcode.com/tag/two-pointers/&lt;/a&gt; Similar Questions: &amp;ldquo;两数之和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/two-sum/&#34;&gt;https://leetcode.com/problems/two-sum/&lt;/a&gt; &amp;ldquo;最接近的三数之和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/3sum-closest/&#34;&gt;https://leetcode.com/problems/3sum-closest/&lt;/a&gt; &amp;ldquo;四数之和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/4sum/&#34;&gt;https://leetcode.com/problems/4sum/&lt;/a&gt; &amp;ldquo;较小的三数之和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/3sum-smaller/&#34;&gt;https://leetcode.com/problems/3sum-smaller/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个包含 &lt;code&gt;n&lt;/code&gt; 个整数的数组 &lt;code&gt;nums&lt;/code&gt;，判断 &lt;code&gt;nums&lt;/code&gt; 中是否存在三个元素 *a，b，c ，*使得 *a + b + c =*0 ？请你找出所有和为 &lt;code&gt;0&lt;/code&gt; 且不重复的三元组。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;*注意：**答案中不可以包含重复的三元组。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [-1,0,1,2,-1,-4]
输出：[[-1,-1,2],[-1,0,1]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = []
输出：[]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [0]
输出：[]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums.length &amp;lt;= 3000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;105 &amp;lt;= nums[i] &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[13] 罗马数字转整数</title>
      <link>http://code.deqiang.wang/posts/leetcode13-%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/</link>
      <pubDate>Fri, 09 Apr 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode13-%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数学&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/math/&#34;&gt;https://leetcode.com/tag/math/&lt;/a&gt; &amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt; Similar Questions: &amp;ldquo;整数转罗马数字&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/integer-to-roman/&#34;&gt;https://leetcode.com/problems/integer-to-roman/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;罗马数字包含以下七种字符: &lt;code&gt;I&lt;/code&gt;， &lt;code&gt;V&lt;/code&gt;， &lt;code&gt;X&lt;/code&gt;， &lt;code&gt;L&lt;/code&gt;，&lt;code&gt;C&lt;/code&gt;，&lt;code&gt;D&lt;/code&gt; 和 &lt;code&gt;M&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;字符          数值
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;例如， 罗马数字 2 写做 &lt;code&gt;II&lt;/code&gt; ，即为两个并列的 1。12 写做 &lt;code&gt;XII&lt;/code&gt; ，即为 &lt;code&gt;X&lt;/code&gt; + &lt;code&gt;II&lt;/code&gt; 。 27 写做 &lt;code&gt;XXVII&lt;/code&gt;, 即为 &lt;code&gt;XX&lt;/code&gt; + &lt;code&gt;V&lt;/code&gt; + &lt;code&gt;II&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 &lt;code&gt;IIII&lt;/code&gt;，而是 &lt;code&gt;IV&lt;/code&gt;。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 &lt;code&gt;IX&lt;/code&gt;。这个特殊的规则只适用于以下六种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;I&lt;/code&gt; 可以放在 &lt;code&gt;V&lt;/code&gt; (5) 和 &lt;code&gt;X&lt;/code&gt; (10) 的左边，来表示 4 和 9。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X&lt;/code&gt; 可以放在 &lt;code&gt;L&lt;/code&gt; (50) 和 &lt;code&gt;C&lt;/code&gt; (100) 的左边，来表示 40 和 90。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C&lt;/code&gt; 可以放在 &lt;code&gt;D&lt;/code&gt; (500) 和 &lt;code&gt;M&lt;/code&gt; (1000) 的左边，来表示 400 和 900。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;给定一个罗马数字，将其转换成整数。输入确保在 1 到 3999 的范围内。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: &amp;#34;III&amp;#34;
输出: 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: &amp;#34;IV&amp;#34;
输出: 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: &amp;#34;IX&amp;#34;
输出: 9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: &amp;#34;LVIII&amp;#34;
输出: 58
解释: L = 50, V= 5, III = 3.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 5:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: &amp;#34;MCMXCIV&amp;#34;
输出: 1994
解释: M = 1000, CM = 900, XC = 90, IV = 4.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= s.length &amp;lt;= 15&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt; 仅含字符 &lt;code&gt;(&#39;I&#39;, &#39;V&#39;, &#39;X&#39;, &#39;L&#39;, &#39;C&#39;, &#39;D&#39;, &#39;M&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;题目数据保证 &lt;code&gt;s&lt;/code&gt; 是一个有效的罗马数字，且表示整数在范围 &lt;code&gt;[1, 3999]&lt;/code&gt; 内&lt;/li&gt;
&lt;li&gt;题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。&lt;/li&gt;
&lt;li&gt;IL 和 IM 这样的例子并不符合题目要求，49 应该写作 XLIX，999 应该写作 CMXCIX 。&lt;/li&gt;
&lt;li&gt;关于罗马数字的详尽书写规则，可以参考 &lt;a href=&#34;https://b2b.partcommunity.com/community/knowledge/zh_CN/detail/10753/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97#knowledge_article&#34;&gt;罗马数字 - Mathematics&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[12] 整数转罗马数字</title>
      <link>http://code.deqiang.wang/posts/leetcode12-%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/</link>
      <pubDate>Thu, 08 Apr 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode12-%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数学&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/math/&#34;&gt;https://leetcode.com/tag/math/&lt;/a&gt; &amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt; Similar Questions: &amp;ldquo;罗马数字转整数&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/roman-to-integer/&#34;&gt;https://leetcode.com/problems/roman-to-integer/&lt;/a&gt; &amp;ldquo;整数转换英文表示&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/integer-to-english-words/&#34;&gt;https://leetcode.com/problems/integer-to-english-words/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;罗马数字包含以下七种字符： &lt;code&gt;I&lt;/code&gt;， &lt;code&gt;V&lt;/code&gt;， &lt;code&gt;X&lt;/code&gt;， &lt;code&gt;L&lt;/code&gt;，&lt;code&gt;C&lt;/code&gt;，&lt;code&gt;D&lt;/code&gt; 和 &lt;code&gt;M&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;字符          数值
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;例如， 罗马数字 2 写做 &lt;code&gt;II&lt;/code&gt; ，即为两个并列的 1。12 写做 &lt;code&gt;XII&lt;/code&gt; ，即为 &lt;code&gt;X&lt;/code&gt; + &lt;code&gt;II&lt;/code&gt; 。 27 写做 &lt;code&gt;XXVII&lt;/code&gt;, 即为 &lt;code&gt;XX&lt;/code&gt; + &lt;code&gt;V&lt;/code&gt; + &lt;code&gt;II&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 &lt;code&gt;IIII&lt;/code&gt;，而是 &lt;code&gt;IV&lt;/code&gt;。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 &lt;code&gt;IX&lt;/code&gt;。这个特殊的规则只适用于以下六种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;I&lt;/code&gt; 可以放在 &lt;code&gt;V&lt;/code&gt; (5) 和 &lt;code&gt;X&lt;/code&gt; (10) 的左边，来表示 4 和 9。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X&lt;/code&gt; 可以放在 &lt;code&gt;L&lt;/code&gt; (50) 和 &lt;code&gt;C&lt;/code&gt; (100) 的左边，来表示 40 和 90。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C&lt;/code&gt; 可以放在 &lt;code&gt;D&lt;/code&gt; (500) 和 &lt;code&gt;M&lt;/code&gt; (1000) 的左边，来表示 400 和 900。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;给定一个整数，将其转为罗马数字。输入确保在 1 到 3999 的范围内。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: 3
输出: &amp;#34;III&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: 4
输出: &amp;#34;IV&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: 9
输出: &amp;#34;IX&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: 58
输出: &amp;#34;LVIII&amp;#34;
解释: L = 50, V = 5, III = 3.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 5:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: 1994
输出: &amp;#34;MCMXCIV&amp;#34;
解释: M = 1000, CM = 900, XC = 90, IV = 4.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= num &amp;lt;= 3999&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[25] K个一组翻转链表</title>
      <link>http://code.deqiang.wang/posts/leetcode25-k-%E4%B8%AA%E4%B8%80%E7%BB%84%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Sun, 04 Apr 2021 16:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode25-k-%E4%B8%AA%E4%B8%80%E7%BB%84%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/linked-list/&#34;&gt;https://leetcode.com/tag/linked-list/&lt;/a&gt;
Similar Questions:
&amp;ldquo;两两交换链表中的节点&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/swap-nodes-in-pairs/&#34;&gt;https://leetcode.com/problems/swap-nodes-in-pairs/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个链表，每 &lt;em&gt;k&lt;/em&gt;个节点一组进行翻转，请你返回翻转后的链表。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;k&lt;/em&gt;是一个正整数，它的值小于或等于链表的长度。&lt;/p&gt;
&lt;p&gt;如果节点总数不是 &lt;em&gt;k&lt;/em&gt;的整数倍，那么请将最后剩余的节点保持原有顺序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进阶：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你可以设计一个只使用常数额外空间的算法来解决此问题吗？&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;你不能只是单纯的改变节点内部的值&lt;/strong&gt;，而是需要实际进行节点交换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：head = [1,2,3,4,5], k = 2
输出：[2,1,4,3,5]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：head = [1,2,3,4,5], k = 3
输出：[3,2,1,4,5]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：head = [1,2,3,4,5], k = 1
输出：[1,2,3,4,5]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：head = [1], k = 1
输出：[1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;列表中节点的数量在范围 &lt;code&gt;sz&lt;/code&gt; 内&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= sz &amp;lt;= 5000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= Node.val &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= k &amp;lt;= sz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[146] LRU缓存机制</title>
      <link>http://code.deqiang.wang/posts/leetcode146-lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Fri, 02 Apr 2021 19:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode146-lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;设计&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/design/&#34;&gt;https://leetcode.com/tag/design/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;similar-questions&#34;&gt;
  Similar Questions:
  &lt;a class=&#34;heading-link&#34; href=&#34;#similar-questions&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;LFU 缓存&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/lfu-cache/&#34;&gt;https://leetcode.com/problems/lfu-cache/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;设计内存文件系统&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/design-in-memory-file-system/&#34;&gt;https://leetcode.com/problems/design-in-memory-file-system/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;迭代压缩字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/design-compressed-string-iterator/&#34;&gt;https://leetcode.com/problems/design-compressed-string-iterator/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;运用你所掌握的数据结构，设计和实现一个 &lt;a href=&#34;https://baike.baidu.com/item/LRU&#34;&gt;LRU (最近最少使用) 缓存机制&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;实现 &lt;code&gt;LRUCache&lt;/code&gt; 类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;LRUCache(int capacity)&lt;/code&gt; 以正整数作为容量 &lt;code&gt;capacity&lt;/code&gt; 初始化 LRU 缓存&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int get(int key)&lt;/code&gt; 如果关键字 &lt;code&gt;key&lt;/code&gt; 存在于缓存中，则返回关键字的值，否则返回 &lt;code&gt;1&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void put(int key, int value)&lt;/code&gt; 如果关键字已经存在，则变更其数据值；如果关键字不存在，则插入该组「关键字-值」。当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值，从而为新的数据值留出空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进阶&lt;/strong&gt;：你是否可以在 &lt;code&gt;O(1)&lt;/code&gt; 时间复杂度内完成这两种操作？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入
[&amp;#34;LRUCache&amp;#34;, &amp;#34;put&amp;#34;, &amp;#34;put&amp;#34;, &amp;#34;get&amp;#34;, &amp;#34;put&amp;#34;, &amp;#34;get&amp;#34;, &amp;#34;put&amp;#34;, &amp;#34;get&amp;#34;, &amp;#34;get&amp;#34;, &amp;#34;get&amp;#34;]
[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]
输出
[null, null, null, 1, null, -1, null, -1, 3, 4]

解释
LRUCache lRUCache = new LRUCache(2);
lRUCache.put(1, 1); // 缓存是 {1=1}
lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}
lRUCache.get(1);    // 返回 1
lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}
lRUCache.get(2);    // 返回 -1 (未找到)
lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}
lRUCache.get(1);    // 返回 -1 (未找到)
lRUCache.get(3);    // 返回 3
lRUCache.get(4);    // 返回 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= capacity &amp;lt;= 3000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= key &amp;lt;= 3000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= value &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;最多调用 &lt;code&gt;3 * 104&lt;/code&gt; 次 &lt;code&gt;get&lt;/code&gt; 和 &lt;code&gt;put&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[11] 盛最多水的容器</title>
      <link>http://code.deqiang.wang/posts/leetcode11-%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Fri, 02 Apr 2021 15:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode11-%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt; &amp;ldquo;双指针&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/two-pointers/&#34;&gt;https://leetcode.com/tag/two-pointers/&lt;/a&gt; Similar Questions: &amp;ldquo;接雨水&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/trapping-rain-water/&#34;&gt;https://leetcode.com/problems/trapping-rain-water/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你 &lt;code&gt;n&lt;/code&gt; 个非负整数 &lt;code&gt;a1，a2，...，a``n&lt;/code&gt;，每个数代表坐标中的一个点 &lt;code&gt;(i, ai)&lt;/code&gt; 。在坐标内画 &lt;code&gt;n&lt;/code&gt; 条垂直线，垂直线 &lt;code&gt;i&lt;/code&gt; 的两个端点分别为 &lt;code&gt;(i, ai)&lt;/code&gt; 和 &lt;code&gt;(i, 0)&lt;/code&gt; 。找出其中的两条线，使得它们与 &lt;code&gt;x&lt;/code&gt; 轴共同构成的容器可以容纳最多的水。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;*说明：**你不能倾斜容器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：[1,8,6,2,5,4,8,3,7]
输出：49
解释：图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：height = [1,1]
输出：1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：height = [4,3,2,1,4]
输出：16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：height = [1,2,1]
输出：2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;n = height.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2 &amp;lt;= n &amp;lt;= 3 * 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= height[i] &amp;lt;= 3 * 104&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[10] 正则表达式匹配</title>
      <link>http://code.deqiang.wang/posts/leetcode10-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Tue, 30 Mar 2021 14:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode10-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt; &amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt; &amp;ldquo;回溯算法&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/backtracking/&#34;&gt;https://leetcode.com/tag/backtracking/&lt;/a&gt; Similar Questions: &amp;ldquo;通配符匹配&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/wildcard-matching/&#34;&gt;https://leetcode.com/problems/wildcard-matching/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个字符串 &lt;code&gt;s&lt;/code&gt; 和一个字符规律 &lt;code&gt;p&lt;/code&gt;，请你来实现一个支持 &lt;code&gt;&#39;.&#39;&lt;/code&gt; 和 &lt;code&gt;&#39;*&#39;&lt;/code&gt; 的正则表达式匹配。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;.&#39;&lt;/code&gt; 匹配任意单个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;*&#39;&lt;/code&gt; 匹配零个或多个前面的那一个元素&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所谓匹配，是要涵盖 &lt;strong&gt;整个&lt;/strong&gt;字符串 &lt;code&gt;s&lt;/code&gt;的，而不是部分字符串。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;aa&amp;#34; p = &amp;#34;a&amp;#34;
输出：false
解释：&amp;#34;a&amp;#34; 无法匹配 &amp;#34;aa&amp;#34; 整个字符串。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;aa&amp;#34; p = &amp;#34;a*&amp;#34;
输出：true
解释：因为 &amp;#39;*&amp;#39; 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 &amp;#39;a&amp;#39;。因此，字符串 &amp;#34;aa&amp;#34; 可被视为 &amp;#39;a&amp;#39; 重复了一次。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;ab&amp;#34; p = &amp;#34;.*&amp;#34;
输出：true
解释：&amp;#34;.*&amp;#34; 表示可匹配零个或多个（&amp;#39;*&amp;#39;）任意字符（&amp;#39;.&amp;#39;）。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;aab&amp;#34; p = &amp;#34;c*a*b&amp;#34;
输出：true
解释：因为 &amp;#39;*&amp;#39; 表示零个或多个，这里 &amp;#39;c&amp;#39; 为 0 个, &amp;#39;a&amp;#39; 被重复一次。因此可以匹配字符串 &amp;#34;aab&amp;#34;。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 5：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;mississippi&amp;#34; p = &amp;#34;mis*is*p*.&amp;#34;
输出：false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= s.length &amp;lt;= 20&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= p.length &amp;lt;= 30&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt; 可能为空，且只包含从 &lt;code&gt;a-z&lt;/code&gt; 的小写字母。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt; 可能为空，且只包含从 &lt;code&gt;a-z&lt;/code&gt; 的小写字母，以及字符 &lt;code&gt;.&lt;/code&gt; 和 ``。&lt;/li&gt;
&lt;li&gt;保证每次出现字符 `` 时，前面都匹配到有效的字符&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[3] 无重复字符的最长子串</title>
      <link>http://code.deqiang.wang/posts/leetcode3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</link>
      <pubDate>Mon, 29 Mar 2021 12:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;哈希表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/hash-table/&#34;&gt;https://leetcode.com/tag/hash-table/&lt;/a&gt;
&amp;ldquo;双指针&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/two-pointers/&#34;&gt;https://leetcode.com/tag/two-pointers/&lt;/a&gt;
&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt;
&amp;ldquo;Sliding Window&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/sliding-window/&#34;&gt;https://leetcode.com/tag/sliding-window/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;similar-questions&#34;&gt;
  Similar Questions:
  &lt;a class=&#34;heading-link&#34; href=&#34;#similar-questions&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;至多包含两个不同字符的最长子串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters/&#34;&gt;https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters/&lt;/a&gt;
&amp;ldquo;至多包含 K 个不同字符的最长子串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/longest-substring-with-at-most-k-distinct-characters/&#34;&gt;https://leetcode.com/problems/longest-substring-with-at-most-k-distinct-characters/&lt;/a&gt;
&amp;ldquo;K 个不同整数的子数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/subarrays-with-k-different-integers/&#34;&gt;https://leetcode.com/problems/subarrays-with-k-different-integers/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个字符串，请你找出其中不含有重复字符的 &lt;strong&gt;最长子串&lt;/strong&gt;的长度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: s = &amp;#34;abcabcbb&amp;#34;
输出: 3 
解释: 因为无重复字符的最长子串是 &amp;#34;abc&amp;#34;，所以其长度为 3。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: s = &amp;#34;bbbbb&amp;#34;
输出: 1
解释: 因为无重复字符的最长子串是 &amp;#34;b&amp;#34;，所以其长度为 1。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: s = &amp;#34;pwwkew&amp;#34;
输出: 3
解释: 因为无重复字符的最长子串是 &amp;#34;wke&amp;#34;，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，&amp;#34;pwke&amp;#34; 是一个子序列，不是子串。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: s = &amp;#34;&amp;#34;
输出: 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= s.length &amp;lt;= 5 * 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt; 由英文字母、数字、符号和空格组成&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[4] 寻找两个正序数组的中位数</title>
      <link>http://code.deqiang.wang/posts/leetcode4-%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</link>
      <pubDate>Mon, 29 Mar 2021 12:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode4-%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt; &amp;ldquo;二分查找&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-search/&#34;&gt;https://leetcode.com/tag/binary-search/&lt;/a&gt; &amp;ldquo;分治算法&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/divide-and-conquer/&#34;&gt;https://leetcode.com/tag/divide-and-conquer/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定两个大小分别为 &lt;code&gt;m&lt;/code&gt; 和 &lt;code&gt;n&lt;/code&gt; 的正序（从小到大）数组 &lt;code&gt;nums1&lt;/code&gt; 和 &lt;code&gt;nums2&lt;/code&gt;。请你找出并返回这两个正序数组的 &lt;strong&gt;中位数&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums1 = [1,3], nums2 = [2]
输出：2.00000
解释：合并数组 = [1,2,3] ，中位数 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums1 = [1,2], nums2 = [3,4]
输出：2.50000
解释：合并数组 = [1,2,3,4] ，中位数 (2 + 3) / 2 = 2.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums1 = [0,0], nums2 = [0,0]
输出：0.00000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums1 = [], nums2 = [1]
输出：1.00000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 5：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums1 = [2], nums2 = []
输出：2.00000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nums1.length == m&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nums2.length == n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= m &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= n &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= m + n &amp;lt;= 2000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;106 &amp;lt;= nums1[i], nums2[i] &amp;lt;= 106&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;*进阶：**你能设计一个时间复杂度为 &lt;code&gt;O(log (m+n))&lt;/code&gt; 的算法解决此问题吗？&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[5] 最长回文子串</title>
      <link>http://code.deqiang.wang/posts/leetcode5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</link>
      <pubDate>Mon, 29 Mar 2021 12:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt; &amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt; Similar Questions: &amp;ldquo;最短回文串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/shortest-palindrome/&#34;&gt;https://leetcode.com/problems/shortest-palindrome/&lt;/a&gt; &amp;ldquo;回文排列&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/palindrome-permutation/&#34;&gt;https://leetcode.com/problems/palindrome-permutation/&lt;/a&gt; &amp;ldquo;回文对&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/palindrome-pairs/&#34;&gt;https://leetcode.com/problems/palindrome-pairs/&lt;/a&gt; &amp;ldquo;最长回文子序列&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/longest-palindromic-subsequence/&#34;&gt;https://leetcode.com/problems/longest-palindromic-subsequence/&lt;/a&gt; &amp;ldquo;回文子串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/palindromic-substrings/&#34;&gt;https://leetcode.com/problems/palindromic-substrings/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个字符串 &lt;code&gt;s&lt;/code&gt;，找到 &lt;code&gt;s&lt;/code&gt; 中最长的回文子串。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;babad&amp;#34;
输出：&amp;#34;bab&amp;#34;
解释：&amp;#34;aba&amp;#34; 同样是符合题意的答案。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;cbbd&amp;#34;
输出：&amp;#34;bb&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;a&amp;#34;
输出：&amp;#34;a&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;ac&amp;#34;
输出：&amp;#34;a&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= s.length &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt; 仅由数字和英文字母（大写和/或小写）组成&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[6] Z 字形变换</title>
      <link>http://code.deqiang.wang/posts/leetcode6-z-%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</link>
      <pubDate>Mon, 29 Mar 2021 12:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode6-z-%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;将一个给定字符串 &lt;code&gt;s&lt;/code&gt; 根据给定的行数 &lt;code&gt;numRows&lt;/code&gt; ，以从上往下、从左到右进行 Z 字形排列。&lt;/p&gt;
&lt;p&gt;比如输入字符串为 &lt;code&gt;&amp;quot;PAYPALISHIRING&amp;quot;&lt;/code&gt; 行数为 &lt;code&gt;3&lt;/code&gt; 时，排列如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;P   A   H   N
A P L S I I G
Y   I   R
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：&lt;code&gt;&amp;quot;PAHNAPLSIIGYIR&amp;quot;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;请你实现这个将字符串进行指定行数变换的函数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;string convert(string s, int numRows);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;PAYPALISHIRING&amp;#34;, numRows = 3
输出：&amp;#34;PAHNAPLSIIGYIR&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;PAYPALISHIRING&amp;#34;, numRows = 4
输出：&amp;#34;PINALSIGYAHRPI&amp;#34;
解释：
P     I    N
A   L S  I G
Y A   H R
P     I
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;A&amp;#34;, numRows = 1
输出：&amp;#34;A&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= s.length &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt; 由英文字母（小写和大写）、&lt;code&gt;&#39;,&#39;&lt;/code&gt; 和 &lt;code&gt;&#39;.&#39;&lt;/code&gt; 组成&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= numRows &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[7] 整数反转</title>
      <link>http://code.deqiang.wang/posts/leetcode7-%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</link>
      <pubDate>Mon, 29 Mar 2021 12:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode7-%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数学&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/math/&#34;&gt;https://leetcode.com/tag/math/&lt;/a&gt; Similar Questions: &amp;ldquo;字符串转换整数 (atoi)&amp;quot;: &lt;a href=&#34;https://leetcode.com/problems/string-to-integer-atoi/&#34;&gt;https://leetcode.com/problems/string-to-integer-atoi/&lt;/a&gt; &amp;ldquo;颠倒二进制位&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/reverse-bits/&#34;&gt;https://leetcode.com/problems/reverse-bits/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个 32 位的有符号整数 &lt;code&gt;x&lt;/code&gt; ，返回将 &lt;code&gt;x&lt;/code&gt; 中的数字部分反转后的结果。&lt;/p&gt;
&lt;p&gt;如果反转后整数超过 32 位的有符号整数的范围 &lt;code&gt;[−231, 231 − 1]&lt;/code&gt; ，就返回 0。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;假设环境不允许存储 64 位整数（有符号或无符号）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：x = 123
输出：321
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：x = -123
输出：-321
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：x = 120
输出：21
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：x = 0
输出：0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;231 &amp;lt;= x &amp;lt;= 231 - 1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[24] 两两交换链表中的节点</title>
      <link>http://code.deqiang.wang/posts/leetcode24-%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</link>
      <pubDate>Mon, 29 Mar 2021 11:02:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode24-%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;递归&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/recursion/&#34;&gt;https://leetcode.com/tag/recursion/&lt;/a&gt; &amp;ldquo;链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/linked-list/&#34;&gt;https://leetcode.com/tag/linked-list/&lt;/a&gt; Similar Questions: &amp;ldquo;K 个一组翻转链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/reverse-nodes-in-k-group/&#34;&gt;https://leetcode.com/problems/reverse-nodes-in-k-group/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你不能只是单纯的改变节点内部的值&lt;/strong&gt;，而是需要实际的进行节点交换。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：head = [1,2,3,4]
输出：[2,1,4,3]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：head = []
输出：[]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：head = [1]
输出：[1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;链表中节点的数目在范围 &lt;code&gt;[0, 100]&lt;/code&gt; 内&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= Node.val &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;*进阶：**你能在不修改链表节点值的情况下解决这个问题吗?（也就是说，仅修改节点本身。）&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[21] 合并两个有序链表</title>
      <link>http://code.deqiang.wang/posts/leetcode21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Sun, 28 Mar 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;递归&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/recursion/&#34;&gt;https://leetcode.com/tag/recursion/&lt;/a&gt; &amp;ldquo;链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/linked-list/&#34;&gt;https://leetcode.com/tag/linked-list/&lt;/a&gt; Similar Questions: &amp;ldquo;合并K个升序链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/merge-k-sorted-lists/&#34;&gt;https://leetcode.com/problems/merge-k-sorted-lists/&lt;/a&gt; &amp;ldquo;合并两个有序数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/merge-sorted-array/&#34;&gt;https://leetcode.com/problems/merge-sorted-array/&lt;/a&gt; &amp;ldquo;排序链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/sort-list/&#34;&gt;https://leetcode.com/problems/sort-list/&lt;/a&gt; &amp;ldquo;最短单词距离 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/shortest-word-distance-ii/&#34;&gt;https://leetcode.com/problems/shortest-word-distance-ii/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;将两个升序链表合并为一个新的 &lt;strong&gt;升序&lt;/strong&gt; 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：l1 = [1,2,4], l2 = [1,3,4]
输出：[1,1,2,3,4,4]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：l1 = [], l2 = []
输出：[]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：l1 = [], l2 = [0]
输出：[0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个链表的节点数目范围是 &lt;code&gt;[0, 50]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;100 &amp;lt;= Node.val &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l1&lt;/code&gt; 和 &lt;code&gt;l2&lt;/code&gt; 均按 &lt;strong&gt;非递减顺序&lt;/strong&gt; 排列&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[56] 合并区间</title>
      <link>http://code.deqiang.wang/posts/leetcode56-%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/</link>
      <pubDate>Sat, 27 Mar 2021 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode56-%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;排序&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/sort/&#34;&gt;https://leetcode.com/tag/sort/&lt;/a&gt;
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
Similar Questions:
&amp;ldquo;插入区间&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/insert-interval/&#34;&gt;https://leetcode.com/problems/insert-interval/&lt;/a&gt;
&amp;ldquo;会议室&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/meeting-rooms/&#34;&gt;https://leetcode.com/problems/meeting-rooms/&lt;/a&gt;
&amp;ldquo;会议室 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/meeting-rooms-ii/&#34;&gt;https://leetcode.com/problems/meeting-rooms-ii/&lt;/a&gt;
&amp;ldquo;提莫攻击&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/teemo-attacking/&#34;&gt;https://leetcode.com/problems/teemo-attacking/&lt;/a&gt;
&amp;ldquo;给字符串添加加粗标签&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/add-bold-tag-in-string/&#34;&gt;https://leetcode.com/problems/add-bold-tag-in-string/&lt;/a&gt;
&amp;ldquo;Range 模块&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/range-module/&#34;&gt;https://leetcode.com/problems/range-module/&lt;/a&gt;
&amp;ldquo;员工空闲时间&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/employee-free-time/&#34;&gt;https://leetcode.com/problems/employee-free-time/&lt;/a&gt;
&amp;ldquo;划分字母区间&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/partition-labels/&#34;&gt;https://leetcode.com/problems/partition-labels/&lt;/a&gt;
&amp;ldquo;区间列表的交集&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/interval-list-intersections/&#34;&gt;https://leetcode.com/problems/interval-list-intersections/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;以数组 &lt;code&gt;intervals&lt;/code&gt; 表示若干个区间的集合，其中单个区间为 &lt;code&gt;intervals[i] = [starti, endi]&lt;/code&gt; 。请你合并所有重叠的区间，并返回一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：intervals = [[1,3],[2,6],[8,10],[15,18]]
输出：[[1,6],[8,10],[15,18]]
解释：区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：intervals = [[1,4],[4,5]]
输出：[[1,5]]
解释：区间 [1,4] 和 [4,5] 可被视为重叠区间。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= intervals.length &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intervals[i].length == 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= starti &amp;lt;= endi &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[912] 排序数组</title>
      <link>http://code.deqiang.wang/posts/leetcode912-%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</link>
      <pubDate>Sat, 27 Mar 2021 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode912-%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个整数数组 &lt;code&gt;nums&lt;/code&gt;，请你将该数组升序排列。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [5,2,3,1]
输出：[1,2,3,5]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [5,1,1,2,0,0]
输出：[0,0,1,1,2,5]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 50000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;50000 &amp;lt;= nums[i] &amp;lt;= 50000&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[160] 相交链表</title>
      <link>http://code.deqiang.wang/posts/leetcode160-%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Fri, 26 Mar 2021 12:02:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode160-%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/linked-list/&#34;&gt;https://leetcode.com/tag/linked-list/&lt;/a&gt; Similar Questions: &amp;ldquo;两个列表的最小索引总和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-index-sum-of-two-lists/&#34;&gt;https://leetcode.com/problems/minimum-index-sum-of-two-lists/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;编写一个程序，找到两个单链表相交的起始节点。&lt;/p&gt;
&lt;p&gt;如下面的两个链表**：**&lt;/p&gt;
&lt;p&gt;在节点 c1 开始相交。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,0,1,8,4,5], skipA = 2, skipB = 3
输出：Reference of the node with value = 8
输入解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,0,1,8,4,5]。在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：intersectVal = 2, listA = [0,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1
输出：Reference of the node with value = 2
输入解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。从各自的表头开始算起，链表 A 为 [0,9,1,2,4]，链表 B 为 [3,2,4]。在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2
输出：null
输入解释：从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。
解释：这两个链表不相交，因此返回 null。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果两个链表没有交点，返回 &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;在返回结果后，两个链表仍须保持原有的结构。&lt;/li&gt;
&lt;li&gt;可假定整个链表结构中没有循环。&lt;/li&gt;
&lt;li&gt;程序尽量满足 O(&lt;em&gt;n&lt;/em&gt;) 时间复杂度，且仅用 O(&lt;em&gt;1&lt;/em&gt;) 内存。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[215] 数组中的第K个最大元素</title>
      <link>http://code.deqiang.wang/posts/leetcode215-%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%ACk%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0/</link>
      <pubDate>Fri, 26 Mar 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode215-%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%ACk%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;分治&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/divide-and-conquer/&#34;&gt;https://leetcode.com/tag/divide-and-conquer/&lt;/a&gt;
&amp;ldquo;快速选择&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/quickselect/&#34;&gt;https://leetcode.com/tag/quickselect/&lt;/a&gt;
&amp;ldquo;排序&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/sorting/&#34;&gt;https://leetcode.com/tag/sorting/&lt;/a&gt;
&amp;ldquo;堆（优先队列）&amp;quot;: &lt;a href=&#34;https://leetcode.com/tag/heap-priority-queue/&#34;&gt;https://leetcode.com/tag/heap-priority-queue/&lt;/a&gt;
Similar Questions:
&amp;ldquo;摆动排序 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/wiggle-sort-ii/&#34;&gt;https://leetcode.com/problems/wiggle-sort-ii/&lt;/a&gt;
&amp;ldquo;前 K 个高频元素&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/top-k-frequent-elements/&#34;&gt;https://leetcode.com/problems/top-k-frequent-elements/&lt;/a&gt;
&amp;ldquo;第三大的数&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/third-maximum-number/&#34;&gt;https://leetcode.com/problems/third-maximum-number/&lt;/a&gt;
&amp;ldquo;数据流中的第 K 大元素&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/kth-largest-element-in-a-stream/&#34;&gt;https://leetcode.com/problems/kth-largest-element-in-a-stream/&lt;/a&gt;
&amp;ldquo;最接近原点的 K 个点&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/k-closest-points-to-origin/&#34;&gt;https://leetcode.com/problems/k-closest-points-to-origin/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定整数数组 &lt;code&gt;nums&lt;/code&gt; 和整数 &lt;code&gt;k&lt;/code&gt;，请返回数组中第 &lt;code&gt;**k**&lt;/code&gt; 个最大的元素。&lt;/p&gt;
&lt;p&gt;请注意，你需要找的是数组排序后的第 &lt;code&gt;k&lt;/code&gt; 个最大的元素，而不是第 &lt;code&gt;k&lt;/code&gt; 个不同的元素。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: [3,2,1,5,6,4] 和 k = 2
输出: 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入: [3,2,3,1,2,4,5,5,6] 和 k = 4
输出: 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= k &amp;lt;= nums.length &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-104 &amp;lt;= nums[i] &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[206] 反转链表</title>
      <link>http://code.deqiang.wang/posts/leetcode206-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Thu, 25 Mar 2021 11:02:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode206-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;p&gt;方法一：迭代&lt;/p&gt;
&lt;p&gt;在遍历链表时，将当前节点的 next 指针改为指向前一个节点。由于节点没有引用其前一个节点，因此必须事先存储其前一个节点。在更改引用之前，还需要存储后一个节点。最后返回新的头引用。&lt;/p&gt;
&lt;p&gt;复杂度分析&lt;/p&gt;
&lt;p&gt;时间复杂度：O(n)，其中 n 是链表的长度。需要遍历链表一次。空间复杂度：O(1)。&lt;/p&gt;
&lt;p&gt;方法二：递归&lt;/p&gt;
&lt;p&gt;递归版本稍微复杂一些，其关键在于反向工作。假设链表的其余部分已经被反转，现在应该如何反转它前面的部分？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[9] 回文数</title>
      <link>http://code.deqiang.wang/posts/leetcode9-%E5%9B%9E%E6%96%87%E6%95%B0/</link>
      <pubDate>Fri, 19 Mar 2021 14:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode9-%E5%9B%9E%E6%96%87%E6%95%B0/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数学&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/math/&#34;&gt;https://leetcode.com/tag/math/&lt;/a&gt; Similar Questions: &amp;ldquo;回文链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/palindrome-linked-list/&#34;&gt;https://leetcode.com/problems/palindrome-linked-list/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个整数 &lt;code&gt;x&lt;/code&gt; ，如果 &lt;code&gt;x&lt;/code&gt; 是一个回文整数，返回 &lt;code&gt;true&lt;/code&gt; ；否则，返回 &lt;code&gt;false&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。例如，&lt;code&gt;121&lt;/code&gt; 是回文，而 &lt;code&gt;123&lt;/code&gt; 不是。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：x = 121
输出：true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：x = -121
输出：false
解释：从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：x = 10
输出：false
解释：从右向左读, 为 01 。因此它不是一个回文数。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：x = -101
输出：false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;231 &amp;lt;= x &amp;lt;= 231 - 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;*进阶：**你能不将整数转为字符串来解决这个问题吗？&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[8] 字符串转换整数 (atoi)</title>
      <link>http://code.deqiang.wang/posts/leetcode8-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi/</link>
      <pubDate>Tue, 09 Mar 2021 21:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode8-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数学&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/math/&#34;&gt;https://leetcode.com/tag/math/&lt;/a&gt; &amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt; Similar Questions: &amp;ldquo;整数反转&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/reverse-integer/&#34;&gt;https://leetcode.com/problems/reverse-integer/&lt;/a&gt; &amp;ldquo;有效数字&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/valid-number/&#34;&gt;https://leetcode.com/problems/valid-number/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;请你来实现一个 &lt;code&gt;myAtoi(string s)&lt;/code&gt; 函数，使其能将字符串转换成一个 32 位有符号整数（类似 C/C++ 中的 &lt;code&gt;atoi&lt;/code&gt; 函数）。&lt;/p&gt;
&lt;p&gt;函数 &lt;code&gt;myAtoi(string s)&lt;/code&gt; 的算法如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读入字符串并丢弃无用的前导空格&lt;/li&gt;
&lt;li&gt;检查下一个字符（假设还未到字符末尾）为正还是负号，读取该字符（如果有）。 确定最终结果是负数还是正数。 如果两者都不存在，则假定结果为正。&lt;/li&gt;
&lt;li&gt;读入下一个字符，直到到达下一个非数字字符或到达输入的结尾。字符串的其余部分将被忽略。&lt;/li&gt;
&lt;li&gt;将前面步骤读入的这些数字转换为整数（即，&amp;ldquo;123&amp;rdquo; -&amp;gt; 123， &amp;ldquo;0032&amp;rdquo; -&amp;gt; 32）。如果没有读入数字，则整数为 &lt;code&gt;0&lt;/code&gt; 。必要时更改符号（从步骤 2 开始）。&lt;/li&gt;
&lt;li&gt;如果整数数超过 32 位有符号整数范围 &lt;code&gt;[−231, 231 − 1]&lt;/code&gt; ，需要截断这个整数，使其保持在这个范围内。具体来说，小于 &lt;code&gt;−231&lt;/code&gt; 的整数应该被固定为 &lt;code&gt;−231&lt;/code&gt; ，大于 &lt;code&gt;231 − 1&lt;/code&gt; 的整数应该被固定为 &lt;code&gt;231 − 1&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;返回整数作为最终结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本题中的空白字符只包括空格字符 &lt;code&gt;&#39; &#39;&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;除前导空格或数字后的其余字符串外，&lt;strong&gt;请勿忽略&lt;/strong&gt; 任何其他字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;42&amp;#34;
输出：42
解释：加粗的字符串为已经读入的字符，插入符号是当前读取的字符。
第 1 步：&amp;#34;42&amp;#34;（当前没有读入字符，因为没有前导空格）
         ^
第 2 步：&amp;#34;42&amp;#34;（当前没有读入字符，因为这里不存在 &amp;#39;-&amp;#39; 或者 &amp;#39;+&amp;#39;）
         ^
第 3 步：&amp;#34;42&amp;#34;（读入 &amp;#34;42&amp;#34;）
           ^
解析得到整数 42 。
由于 &amp;#34;42&amp;#34; 在范围 [-231, 231 - 1] 内，最终结果为 42 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;   -42&amp;#34;
输出：-42
解释：
第 1 步：&amp;#34;   -42&amp;#34;（读入前导空格，但忽视掉）
            ^
第 2 步：&amp;#34;   -42&amp;#34;（读入 &amp;#39;-&amp;#39; 字符，所以结果应该是负数）
             ^
第 3 步：&amp;#34;   -42&amp;#34;（读入 &amp;#34;42&amp;#34;）
               ^
解析得到整数 -42 。
由于 &amp;#34;-42&amp;#34; 在范围 [-231, 231 - 1] 内，最终结果为 -42 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;4193 with words&amp;#34;
输出：4193
解释：
第 1 步：&amp;#34;4193 with words&amp;#34;（当前没有读入字符，因为没有前导空格）
         ^
第 2 步：&amp;#34;4193 with words&amp;#34;（当前没有读入字符，因为这里不存在 &amp;#39;-&amp;#39; 或者 &amp;#39;+&amp;#39;）
         ^
第 3 步：&amp;#34;4193 with words&amp;#34;（读入 &amp;#34;4193&amp;#34;；由于下一个字符不是一个数字，所以读入停止）
             ^
解析得到整数 4193 。
由于 &amp;#34;4193&amp;#34; 在范围 [-231, 231 - 1] 内，最终结果为 4193 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;words and 987&amp;#34;
输出：0
解释：
第 1 步：&amp;#34;words and 987&amp;#34;（当前没有读入字符，因为没有前导空格）
         ^
第 2 步：&amp;#34;words and 987&amp;#34;（当前没有读入字符，因为这里不存在 &amp;#39;-&amp;#39; 或者 &amp;#39;+&amp;#39;）
         ^
第 3 步：&amp;#34;words and 987&amp;#34;（由于当前字符 &amp;#39;w&amp;#39; 不是一个数字，所以读入停止）
         ^
解析得到整数 0 ，因为没有读入任何数字。
由于 0 在范围 [-231, 231 - 1] 内，最终结果为 0 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 5：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;-91283472332&amp;#34;
输出：-2147483648
解释：
第 1 步：&amp;#34;-91283472332&amp;#34;（当前没有读入字符，因为没有前导空格）
         ^
第 2 步：&amp;#34;-91283472332&amp;#34;（读入 &amp;#39;-&amp;#39; 字符，所以结果应该是负数）
          ^
第 3 步：&amp;#34;-91283472332&amp;#34;（读入 &amp;#34;91283472332&amp;#34;）
                     ^
解析得到整数 -91283472332 。
由于 -91283472332 小于范围 [-231, 231 - 1] 的下界，最终结果被截断为 -231 = -2147483648 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= s.length &amp;lt;= 200&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt; 由英文字母（大写和小写）、数字（&lt;code&gt;0-9&lt;/code&gt;）、&lt;code&gt;&#39; &#39;&lt;/code&gt;、&lt;code&gt;&#39;+&#39;&lt;/code&gt;、&lt;code&gt;&#39;-&#39;&lt;/code&gt; 和 &lt;code&gt;&#39;.&#39;&lt;/code&gt; 组成&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[2] 两数相加</title>
      <link>http://code.deqiang.wang/posts/leetcode2-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</link>
      <pubDate>Mon, 01 Mar 2021 16:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode2-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;递归&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/recursion/&#34;&gt;https://leetcode.com/tag/recursion/&lt;/a&gt; &amp;ldquo;链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/linked-list/&#34;&gt;https://leetcode.com/tag/linked-list/&lt;/a&gt; &amp;ldquo;数学&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/math/&#34;&gt;https://leetcode.com/tag/math/&lt;/a&gt; Similar Questions: &amp;ldquo;字符串相乘&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/multiply-strings/&#34;&gt;https://leetcode.com/problems/multiply-strings/&lt;/a&gt; &amp;ldquo;二进制求和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/add-binary/&#34;&gt;https://leetcode.com/problems/add-binary/&lt;/a&gt; &amp;ldquo;两整数之和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/sum-of-two-integers/&#34;&gt;https://leetcode.com/problems/sum-of-two-integers/&lt;/a&gt; &amp;ldquo;字符串相加&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/add-strings/&#34;&gt;https://leetcode.com/problems/add-strings/&lt;/a&gt; &amp;ldquo;两数相加 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/add-two-numbers-ii/&#34;&gt;https://leetcode.com/problems/add-two-numbers-ii/&lt;/a&gt; &amp;ldquo;数组形式的整数加法&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/add-to-array-form-of-integer/&#34;&gt;https://leetcode.com/problems/add-to-array-form-of-integer/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你两个 &lt;strong&gt;非空&lt;/strong&gt; 的链表，表示两个非负的整数。它们每位数字都是按照 &lt;strong&gt;逆序&lt;/strong&gt; 的方式存储的，并且每个节点只能存储 &lt;strong&gt;一位&lt;/strong&gt; 数字。&lt;/p&gt;
&lt;p&gt;请你将两个数相加，并以相同形式返回一个表示和的链表。&lt;/p&gt;
&lt;p&gt;你可以假设除了数字 0 之外，这两个数都不会以 0 开头。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：l1 = [2,4,3], l2 = [5,6,4]
输出：[7,0,8]
解释：342 + 465 = 807.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：l1 = [0], l2 = [0]
输出：[0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
输出：[8,9,9,9,0,0,0,1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个链表中的节点数在范围 &lt;code&gt;[1, 100]&lt;/code&gt; 内&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= Node.val &amp;lt;= 9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;题目数据保证列表表示的数字不含前导零&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
