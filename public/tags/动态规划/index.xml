<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>动态规划 on Code is poetry.</title>
    <link>http://code.deqiang.wang/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
    <description>Recent content in 动态规划 on Code is poetry.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 16 Jun 2022 14:22:35 +0000</lastBuildDate><atom:link href="http://code.deqiang.wang/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode[494] 目标和</title>
      <link>http://code.deqiang.wang/posts/leetcode494-%E7%9B%AE%E6%A0%87%E5%92%8C/</link>
      <pubDate>Thu, 16 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode494-%E7%9B%AE%E6%A0%87%E5%92%8C/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;难度：中等&lt;/p&gt;
&lt;p&gt;给定一个非负整数数组，a1, a2, &amp;hellip;, an, 和一个目标数，S。现在你有两个符号 + 和 -。对于数组中的任意一个整数，你都可以从 + 或 -中选择一个符号添加在前面。&lt;/p&gt;
&lt;p&gt;返回可以使最终数组和为目标数 S 的所有添加符号的方法数。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;输入：nums: [1, 1, 1, 1, 1], S: 3
输出：5&lt;/p&gt;
&lt;p&gt;解释：
-1+1+1+1+1 = 3
+1-1+1+1+1 = 3
+1+1-1+1+1 = 3
+1+1+1-1+1 = 3
+1+1+1+1-1 = 3&lt;/p&gt;
&lt;p&gt;一共有5种方法让最终目标和为3。&lt;/p&gt;
&lt;p&gt;提示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数组非空，且长度不会超过 20 。&lt;/li&gt;
&lt;li&gt;初始的数组的和不会超过 1000 。&lt;/li&gt;
&lt;li&gt;保证返回的最终结果能被 32 位整数存下。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[518] 零钱兑换 II</title>
      <link>http://code.deqiang.wang/posts/leetcode518-%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2-ii/</link>
      <pubDate>Tue, 07 Jun 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode518-%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2-ii/</guid>
      <description>&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;给定不同面额的硬币和一个总金额。写出函数来计算可以凑成总金额的硬币组合数。假设每一种面额的硬币有无限个。&lt;/p&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;p&gt;输入: amount = 5, coins = [1, 2, 5] 输出: 4 解释: 有四种方式可以凑成总金额: 5=5 5=2+2+1 5=2+1+1+1 5=1+1+1+1+1&lt;/p&gt;
&lt;p&gt;示例 2: 输入: amount = 3, coins = [2] 输出: 0 解释: 只用面额2的硬币不能凑成总金额3。&lt;/p&gt;
&lt;p&gt;示例 3: 输入: amount = 10, coins = [10] 输出: 1&lt;/p&gt;
&lt;p&gt;注意，你可以假设：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0 &amp;lt;= amount (总金额) &amp;lt;= 5000&lt;/li&gt;
&lt;li&gt;1 &amp;lt;= coin (硬币面额) &amp;lt;= 5000&lt;/li&gt;
&lt;li&gt;硬币种类不超过 500 种&lt;/li&gt;
&lt;li&gt;结果符合 32 位符号整数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[72] 编辑距离</title>
      <link>http://code.deqiang.wang/posts/leetcode72-%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/</link>
      <pubDate>Sun, 13 Feb 2022 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode72-%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/</guid>
      <description>&lt;p&gt;Related Topics:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similar Questions:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;相隔为 1 的编辑距离&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/one-edit-distance/&#34;&gt;https://leetcode.com/problems/one-edit-distance/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;两个字符串的删除操作&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/delete-operation-for-two-strings/&#34;&gt;https://leetcode.com/problems/delete-operation-for-two-strings/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;两个字符串的最小ASCII删除和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/&#34;&gt;https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;不相交的线&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/uncrossed-lines/&#34;&gt;https://leetcode.com/problems/uncrossed-lines/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你两个单词 &lt;code&gt;word1&lt;/code&gt; 和 &lt;code&gt;word2&lt;/code&gt;，请你计算出将 &lt;code&gt;word1&lt;/code&gt; 转换成 &lt;code&gt;word2&lt;/code&gt;所使用的最少操作数 。&lt;/p&gt;
&lt;p&gt;你可以对一个单词进行如下三种操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插入一个字符&lt;/li&gt;
&lt;li&gt;删除一个字符&lt;/li&gt;
&lt;li&gt;替换一个字符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：word1 = &amp;#34;horse&amp;#34;, word2 = &amp;#34;ros&amp;#34;
输出：3
解释：
horse -&amp;gt; rorse (将 &amp;#39;h&amp;#39; 替换为 &amp;#39;r&amp;#39;)
rorse -&amp;gt; rose (删除 &amp;#39;r&amp;#39;)
rose -&amp;gt; ros (删除 &amp;#39;e&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：word1 = &amp;#34;intention&amp;#34;, word2 = &amp;#34;execution&amp;#34;
输出：5
解释：
intention -&amp;gt; inention (删除 &amp;#39;t&amp;#39;)
inention -&amp;gt; enention (将 &amp;#39;i&amp;#39; 替换为 &amp;#39;e&amp;#39;)
enention -&amp;gt; exention (将 &amp;#39;n&amp;#39; 替换为 &amp;#39;x&amp;#39;)
exention -&amp;gt; exection (将 &amp;#39;n&amp;#39; 替换为 &amp;#39;c&amp;#39;)
exection -&amp;gt; execution (插入 &amp;#39;u&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= word1.length, word2.length &amp;lt;= 500&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;word1&lt;/code&gt; 和 &lt;code&gt;word2&lt;/code&gt; 由小写英文字母组成&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[300] 最长递增子序列</title>
      <link>http://code.deqiang.wang/posts/leetcode300-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97-/</link>
      <pubDate>Sun, 12 Dec 2021 22:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode300-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97-/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;二分查找&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-search/&#34;&gt;https://leetcode.com/tag/binary-search/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;递增的三元子序列&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/increasing-triplet-subsequence/&#34;&gt;https://leetcode.com/problems/increasing-triplet-subsequence/&lt;/a&gt;
&amp;ldquo;俄罗斯套娃信封问题&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/russian-doll-envelopes/&#34;&gt;https://leetcode.com/problems/russian-doll-envelopes/&lt;/a&gt;
&amp;ldquo;最长数对链&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-length-of-pair-chain/&#34;&gt;https://leetcode.com/problems/maximum-length-of-pair-chain/&lt;/a&gt;
&amp;ldquo;最长递增子序列的个数&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/number-of-longest-increasing-subsequence/&#34;&gt;https://leetcode.com/problems/number-of-longest-increasing-subsequence/&lt;/a&gt;
&amp;ldquo;两个字符串的最小ASCII删除和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/&#34;&gt;https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个整数数组 &lt;code&gt;nums&lt;/code&gt; ，找到其中最长严格递增子序列的长度。&lt;/p&gt;
&lt;p&gt;子序列是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，&lt;code&gt;[3,6,2,7]&lt;/code&gt; 是数组 &lt;code&gt;[0,3,1,6,2,2,7]&lt;/code&gt; 的子序列。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [10,9,2,5,3,7,101,18]
输出：4
解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [0,1,0,3,2,3]
输出：4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [7,7,7,7,7,7,7]
输出：1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 2500&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-104 &amp;lt;= nums[i] &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进阶：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你可以设计时间复杂度为 &lt;code&gt;O(n2)&lt;/code&gt; 的解决方案吗？&lt;/li&gt;
&lt;li&gt;你能将算法的时间复杂度降低到 &lt;code&gt;O(n log(n))&lt;/code&gt; 吗?&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[1143] 最长公共子序列</title>
      <link>http://code.deqiang.wang/posts/leetcode1143-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sat, 11 Dec 2021 14:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode1143-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定两个字符串 &lt;code&gt;text1&lt;/code&gt; 和 &lt;code&gt;text2&lt;/code&gt;，返回这两个字符串的最长 &lt;strong&gt;公共子序列&lt;/strong&gt; 的长度。如果不存在 &lt;strong&gt;公共子序列&lt;/strong&gt; ，返回 &lt;code&gt;0&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;一个字符串的 &lt;strong&gt;子序列&lt;/strong&gt;是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例如，&lt;code&gt;&amp;quot;ace&amp;quot;&lt;/code&gt; 是 &lt;code&gt;&amp;quot;abcde&amp;quot;&lt;/code&gt; 的子序列，但 &lt;code&gt;&amp;quot;aec&amp;quot;&lt;/code&gt; 不是 &lt;code&gt;&amp;quot;abcde&amp;quot;&lt;/code&gt; 的子序列。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个字符串的 &lt;strong&gt;公共子序列&lt;/strong&gt; 是这两个字符串所共同拥有的子序列。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：text1 = &amp;#34;abcde&amp;#34;, text2 = &amp;#34;ace&amp;#34; 
输出：3  
解释：最长公共子序列是 &amp;#34;ace&amp;#34; ，它的长度为 3 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：text1 = &amp;#34;abc&amp;#34;, text2 = &amp;#34;abc&amp;#34;
输出：3
解释：最长公共子序列是 &amp;#34;abc&amp;#34; ，它的长度为 3 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：text1 = &amp;#34;abc&amp;#34;, text2 = &amp;#34;def&amp;#34;
输出：0
解释：两个字符串没有公共子序列，返回 0 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= text1.length, text2.length &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;text1&lt;/code&gt; 和 &lt;code&gt;text2&lt;/code&gt; 仅由小写英文字符组成。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[198] 打家劫舍</title>
      <link>http://code.deqiang.wang/posts/leetcode198-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/</link>
      <pubDate>Sat, 04 Dec 2021 17:05:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode198-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;乘积最大子数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-product-subarray/&#34;&gt;https://leetcode.com/problems/maximum-product-subarray/&lt;/a&gt;
&amp;ldquo;打家劫舍 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/house-robber-ii/&#34;&gt;https://leetcode.com/problems/house-robber-ii/&lt;/a&gt;
&amp;ldquo;粉刷房子&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/paint-house/&#34;&gt;https://leetcode.com/problems/paint-house/&lt;/a&gt;
&amp;ldquo;栅栏涂色&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/paint-fence/&#34;&gt;https://leetcode.com/problems/paint-fence/&lt;/a&gt;
&amp;ldquo;打家劫舍 III&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/house-robber-iii/&#34;&gt;https://leetcode.com/problems/house-robber-iii/&lt;/a&gt;
&amp;ldquo;不含连续1的非负整数&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/&#34;&gt;https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/&lt;/a&gt;
&amp;ldquo;金币路径&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/coin-path/&#34;&gt;https://leetcode.com/problems/coin-path/&lt;/a&gt;
&amp;ldquo;删除并获得点数&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/delete-and-earn/&#34;&gt;https://leetcode.com/problems/delete-and-earn/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，&lt;strong&gt;如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;给定一个代表每个房屋存放金额的非负整数数组，计算你&lt;strong&gt;不触动警报装置的情况下&lt;/strong&gt;，一夜之内能够偷窃到的最高金额。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：[1,2,3,1]
输出：4
解释：偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。
     偷窃到的最高金额 = 1 + 3 = 4 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：[2,7,9,3,1]
输出：12
解释：偷窃 1 号房屋 (金额 = 2), 偷窃 3 号房屋 (金额 = 9)，接着偷窃 5 号房屋 (金额 = 1)。
     偷窃到的最高金额 = 2 + 9 + 1 = 12 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums[i] &amp;lt;= 400&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[55] 跳跃游戏</title>
      <link>http://code.deqiang.wang/posts/leetcode55-%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Thu, 02 Dec 2021 17:05:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode55-%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;贪心&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/greedy/&#34;&gt;https://leetcode.com/tag/greedy/&lt;/a&gt;
&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;跳跃游戏 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/jump-game-ii/&#34;&gt;https://leetcode.com/problems/jump-game-ii/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个非负整数数组 &lt;code&gt;nums&lt;/code&gt; ，你最初位于数组的 &lt;strong&gt;第一个下标&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;数组中的每个元素代表你在该位置可以跳跃的最大长度。&lt;/p&gt;
&lt;p&gt;判断你是否能够到达最后一个下标。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [2,3,1,1,4]
输出：true
解释：可以先跳 1 步，从下标 0 到达下标 1, 然后再从下标 1 跳 3 步到达最后一个下标。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [3,2,1,0,4]
输出：false
解释：无论怎样，总会到达下标为 3 的位置。但该下标的最大跳跃长度是 0 ， 所以永远不可能到达最后一个下标。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 3 * 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums[i] &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;solution&#34;&gt;
  Solution:
  &lt;a class=&#34;heading-link&#34; href=&#34;#solution&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[718] 最长重复子数组</title>
      <link>http://code.deqiang.wang/posts/leetcode718-%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E6%95%B0%E7%BB%84/</link>
      <pubDate>Wed, 19 May 2021 21:36:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode718-%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;哈希表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/hash-table/&#34;&gt;https://leetcode.com/tag/hash-table/&lt;/a&gt;
&amp;ldquo;二分查找&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-search/&#34;&gt;https://leetcode.com/tag/binary-search/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;长度最小的子数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-size-subarray-sum/&#34;&gt;https://leetcode.com/problems/minimum-size-subarray-sum/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给两个整数数组 &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; ，返回两个数组中公共的、长度最长的子数组的长度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：
A: [1,2,3,2,1]
B: [3,2,1,4,7]
输出：3
解释：
长度最长的公共子数组是 [3, 2, 1] 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= len(A), len(B) &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= A[i], B[i] &amp;lt; 100&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[121] 买卖股票的最佳时机</title>
      <link>http://code.deqiang.wang/posts/leetcode121-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</link>
      <pubDate>Fri, 23 Apr 2021 21:03:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode121-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;最大子序和&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-subarray/&#34;&gt;https://leetcode.com/problems/maximum-subarray/&lt;/a&gt;
&amp;ldquo;买卖股票的最佳时机 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/&#34;&gt;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/&lt;/a&gt;
&amp;ldquo;买卖股票的最佳时机 III&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/&#34;&gt;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/&lt;/a&gt;
&amp;ldquo;买卖股票的最佳时机 IV&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/&#34;&gt;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/&lt;/a&gt;
&amp;ldquo;最佳买卖股票时机含冷冻期&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/&#34;&gt;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个数组 &lt;code&gt;prices&lt;/code&gt; ，它的第 &lt;code&gt;i&lt;/code&gt; 个元素 &lt;code&gt;prices[i]&lt;/code&gt; 表示一支给定股票第 &lt;code&gt;i&lt;/code&gt; 天的价格。&lt;/p&gt;
&lt;p&gt;你只能选择 &lt;strong&gt;某一天&lt;/strong&gt; 买入这只股票，并选择在 &lt;strong&gt;未来的某一个不同的日子&lt;/strong&gt; 卖出该股票。设计一个算法来计算你所能获取的最大利润。&lt;/p&gt;
&lt;p&gt;返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 &lt;code&gt;0&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：[7,1,5,3,6,4]
输出：5
解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。
     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：prices = [7,6,4,3,1]
输出：0
解释：在这种情况下, 没有交易完成, 所以最大利润为 0。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= prices.length &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= prices[i] &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[53] 最大子序和</title>
      <link>http://code.deqiang.wang/posts/leetcode53-%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%92%8C/</link>
      <pubDate>Thu, 22 Apr 2021 21:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode53-%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%92%8C/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/array/&#34;&gt;https://leetcode.com/tag/array/&lt;/a&gt;
&amp;ldquo;分治算法&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/divide-and-conquer/&#34;&gt;https://leetcode.com/tag/divide-and-conquer/&lt;/a&gt;
&amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt;
Similar Questions:
&amp;ldquo;买卖股票的最佳时机&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/best-time-to-buy-and-sell-stock/&#34;&gt;https://leetcode.com/problems/best-time-to-buy-and-sell-stock/&lt;/a&gt;
&amp;ldquo;乘积最大子数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-product-subarray/&#34;&gt;https://leetcode.com/problems/maximum-product-subarray/&lt;/a&gt;
&amp;ldquo;数组的度&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/degree-of-an-array/&#34;&gt;https://leetcode.com/problems/degree-of-an-array/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;最长湍流子数组&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/longest-turbulent-subarray/&#34;&gt;https://leetcode.com/problems/longest-turbulent-subarray/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个整数数组 &lt;code&gt;nums&lt;/code&gt; ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [-2,1,-3,4,-1,2,1,-5,4]
输出：6
解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [1]
输出：1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [0]
输出：0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [-1]
输出：-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 5：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：nums = [-100000]
输出：-100000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 3 * 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-105 &amp;lt;= nums[i] &amp;lt;= 105&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**进阶：**如果你已经实现复杂度为 &lt;code&gt;O(n)&lt;/code&gt; 的解法，尝试使用更为精妙的 &lt;strong&gt;分治法&lt;/strong&gt; 求解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[10] 正则表达式匹配</title>
      <link>http://code.deqiang.wang/posts/leetcode10-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Tue, 30 Mar 2021 14:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode10-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt; &amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt; &amp;ldquo;回溯算法&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/backtracking/&#34;&gt;https://leetcode.com/tag/backtracking/&lt;/a&gt; Similar Questions: &amp;ldquo;通配符匹配&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/wildcard-matching/&#34;&gt;https://leetcode.com/problems/wildcard-matching/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个字符串 &lt;code&gt;s&lt;/code&gt; 和一个字符规律 &lt;code&gt;p&lt;/code&gt;，请你来实现一个支持 &lt;code&gt;&#39;.&#39;&lt;/code&gt; 和 &lt;code&gt;&#39;*&#39;&lt;/code&gt; 的正则表达式匹配。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;.&#39;&lt;/code&gt; 匹配任意单个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;*&#39;&lt;/code&gt; 匹配零个或多个前面的那一个元素&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所谓匹配，是要涵盖 &lt;strong&gt;整个&lt;/strong&gt;字符串 &lt;code&gt;s&lt;/code&gt;的，而不是部分字符串。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;aa&amp;#34; p = &amp;#34;a&amp;#34;
输出：false
解释：&amp;#34;a&amp;#34; 无法匹配 &amp;#34;aa&amp;#34; 整个字符串。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;aa&amp;#34; p = &amp;#34;a*&amp;#34;
输出：true
解释：因为 &amp;#39;*&amp;#39; 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 &amp;#39;a&amp;#39;。因此，字符串 &amp;#34;aa&amp;#34; 可被视为 &amp;#39;a&amp;#39; 重复了一次。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;ab&amp;#34; p = &amp;#34;.*&amp;#34;
输出：true
解释：&amp;#34;.*&amp;#34; 表示可匹配零个或多个（&amp;#39;*&amp;#39;）任意字符（&amp;#39;.&amp;#39;）。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;aab&amp;#34; p = &amp;#34;c*a*b&amp;#34;
输出：true
解释：因为 &amp;#39;*&amp;#39; 表示零个或多个，这里 &amp;#39;c&amp;#39; 为 0 个, &amp;#39;a&amp;#39; 被重复一次。因此可以匹配字符串 &amp;#34;aab&amp;#34;。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 5：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;mississippi&amp;#34; p = &amp;#34;mis*is*p*.&amp;#34;
输出：false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= s.length &amp;lt;= 20&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= p.length &amp;lt;= 30&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt; 可能为空，且只包含从 &lt;code&gt;a-z&lt;/code&gt; 的小写字母。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt; 可能为空，且只包含从 &lt;code&gt;a-z&lt;/code&gt; 的小写字母，以及字符 &lt;code&gt;.&lt;/code&gt; 和 ``。&lt;/li&gt;
&lt;li&gt;保证每次出现字符 `` 时，前面都匹配到有效的字符&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[5] 最长回文子串</title>
      <link>http://code.deqiang.wang/posts/leetcode5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</link>
      <pubDate>Mon, 29 Mar 2021 12:22:35 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</guid>
      <description>&lt;h3 id=&#34;related-topics&#34;&gt;
  Related Topics:
  &lt;a class=&#34;heading-link&#34; href=&#34;#related-topics&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt; &amp;ldquo;动态规划&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/dynamic-programming/&#34;&gt;https://leetcode.com/tag/dynamic-programming/&lt;/a&gt; Similar Questions: &amp;ldquo;最短回文串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/shortest-palindrome/&#34;&gt;https://leetcode.com/problems/shortest-palindrome/&lt;/a&gt; &amp;ldquo;回文排列&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/palindrome-permutation/&#34;&gt;https://leetcode.com/problems/palindrome-permutation/&lt;/a&gt; &amp;ldquo;回文对&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/palindrome-pairs/&#34;&gt;https://leetcode.com/problems/palindrome-pairs/&lt;/a&gt; &amp;ldquo;最长回文子序列&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/longest-palindromic-subsequence/&#34;&gt;https://leetcode.com/problems/longest-palindromic-subsequence/&lt;/a&gt; &amp;ldquo;回文子串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/palindromic-substrings/&#34;&gt;https://leetcode.com/problems/palindromic-substrings/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个字符串 &lt;code&gt;s&lt;/code&gt;，找到 &lt;code&gt;s&lt;/code&gt; 中最长的回文子串。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;babad&amp;#34;
输出：&amp;#34;bab&amp;#34;
解释：&amp;#34;aba&amp;#34; 同样是符合题意的答案。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;cbbd&amp;#34;
输出：&amp;#34;bb&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;a&amp;#34;
输出：&amp;#34;a&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 4：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：s = &amp;#34;ac&amp;#34;
输出：&amp;#34;a&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= s.length &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s&lt;/code&gt; 仅由数字和英文字母（大写和/或小写）组成&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
