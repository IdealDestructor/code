<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>二叉树 on Code is poetry.</title>
    <link>http://code.deqiang.wang/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
    <description>Recent content in 二叉树 on Code is poetry.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 08 Jan 2022 11:29:45 +0000</lastBuildDate><atom:link href="http://code.deqiang.wang/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode[257] 二叉树的所有路径</title>
      <link>http://code.deqiang.wang/posts/leetcode257-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84/</link>
      <pubDate>Sat, 08 Jan 2022 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode257-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/string/&#34;&gt;https://leetcode.com/tag/string/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;
Similar Questions:
&amp;ldquo;路径总和 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/path-sum-ii/&#34;&gt;https://leetcode.com/problems/path-sum-ii/&lt;/a&gt;
&amp;ldquo;从叶结点开始的最小字符串&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/smallest-string-starting-from-leaf/&#34;&gt;https://leetcode.com/problems/smallest-string-starting-from-leaf/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个二叉树的根节点 &lt;code&gt;root&lt;/code&gt; ，按 &lt;strong&gt;任意顺序&lt;/strong&gt; ，返回所有从根节点到叶子节点的路径。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;叶子节点&lt;/strong&gt; 是指没有子节点的节点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [1,2,3,null,5]
输出：[&amp;#34;1-&amp;gt;2-&amp;gt;5&amp;#34;,&amp;#34;1-&amp;gt;3&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [1]
输出：[&amp;#34;1&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树中节点的数目在范围 &lt;code&gt;[1, 100]&lt;/code&gt; 内&lt;/li&gt;
&lt;li&gt;`-100 &amp;lt;= Node.val &amp;lt;= 100&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[110] 平衡二叉树</title>
      <link>http://code.deqiang.wang/posts/leetcode110-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Thu, 06 Jan 2022 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode110-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;
Similar Questions:
&amp;ldquo;二叉树的最大深度&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-depth-of-binary-tree/&#34;&gt;https://leetcode.com/problems/maximum-depth-of-binary-tree/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个二叉树，判断它是否是高度平衡的二叉树。&lt;/p&gt;
&lt;p&gt;本题中，一棵高度平衡二叉树定义为：&lt;/p&gt;
&lt;p&gt;一个二叉树&lt;em&gt;每个节点&lt;/em&gt;的左右两个子树的高度差的绝对值不超过 1 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [3,9,20,null,null,15,7]
输出：true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [1,2,2,3,3,null,null,4,4]
输出：false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = []
输出：true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树中的节点数在范围 &lt;code&gt;[0, 5000]&lt;/code&gt; 内&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-104 &amp;lt;= Node.val &amp;lt;= 104&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[222] 完全二叉树的节点个数</title>
      <link>http://code.deqiang.wang/posts/leetcode222-%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0/</link>
      <pubDate>Wed, 05 Jan 2022 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode222-%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;二分查找&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-search/&#34;&gt;https://leetcode.com/tag/binary-search/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;
Similar Questions:
&amp;ldquo;最接近的二叉搜索树值&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/closest-binary-search-tree-value/&#34;&gt;https://leetcode.com/problems/closest-binary-search-tree-value/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一棵&lt;strong&gt;完全二叉树&lt;/strong&gt; 的根节点 &lt;code&gt;root&lt;/code&gt; ，求出该树的节点个数。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91/7773232?fr=aladdin&#34;&gt;完全二叉树&lt;/a&gt; 的定义如下：在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的若干位置。若最底层为第 &lt;code&gt;h&lt;/code&gt; 层，则该层包含 &lt;code&gt;1~ 2h&lt;/code&gt; 个节点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [1,2,3,4,5,6]
输出：6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = []
输出：0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [1]
输出：1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树中节点的数目范围是&lt;code&gt;[0, 5 * 104]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= Node.val &amp;lt;= 5 * 104&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;题目数据保证输入的树是 &lt;strong&gt;完全二叉树&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**进阶：**遍历树来统计节点是一种时间复杂度为 &lt;code&gt;O(n)&lt;/code&gt; 的简单解决方案。你可以设计一个更快的算法吗？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[104] 二叉树的最大深度</title>
      <link>http://code.deqiang.wang/posts/leetcode104-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6/</link>
      <pubDate>Mon, 03 Jan 2022 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode104-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;Related Topics:
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;广度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/breadth-first-search/&#34;&gt;https://leetcode.com/tag/breadth-first-search/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;
Similar Questions:
&amp;ldquo;平衡二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/balanced-binary-tree/&#34;&gt;https://leetcode.com/problems/balanced-binary-tree/&lt;/a&gt;
&amp;ldquo;二叉树的最小深度&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-depth-of-binary-tree/&#34;&gt;https://leetcode.com/problems/minimum-depth-of-binary-tree/&lt;/a&gt;
&amp;ldquo;N 叉树的最大深度&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/maximum-depth-of-n-ary-tree/&#34;&gt;https://leetcode.com/problems/maximum-depth-of-n-ary-tree/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个二叉树，找出其最大深度。&lt;/p&gt;
&lt;p&gt;二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明:&lt;/strong&gt; 叶子节点是指没有子节点的节点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;
给定二叉树 &lt;code&gt;[3,9,20,null,null,15,7]&lt;/code&gt;，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;3
   / \
  9  20
    /  \
   15   7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;返回它的最大深度 3 。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[102] 二叉树的层序遍历</title>
      <link>http://code.deqiang.wang/posts/leetcode102-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</link>
      <pubDate>Tue, 28 Dec 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode102-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;广度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/breadth-first-search/&#34;&gt;https://leetcode.com/tag/breadth-first-search/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;
Similar Questions:
&amp;ldquo;二叉树的锯齿形层序遍历&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/&#34;&gt;https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/&lt;/a&gt;
&amp;ldquo;二叉树的层序遍历 II&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/binary-tree-level-order-traversal-ii/&#34;&gt;https://leetcode.com/problems/binary-tree-level-order-traversal-ii/&lt;/a&gt;
&amp;ldquo;二叉树的最小深度&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/minimum-depth-of-binary-tree/&#34;&gt;https://leetcode.com/problems/minimum-depth-of-binary-tree/&lt;/a&gt;
&amp;ldquo;二叉树的垂直遍历&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/binary-tree-vertical-order-traversal/&#34;&gt;https://leetcode.com/problems/binary-tree-vertical-order-traversal/&lt;/a&gt;
&amp;ldquo;二叉树的层平均值&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/average-of-levels-in-binary-tree/&#34;&gt;https://leetcode.com/problems/average-of-levels-in-binary-tree/&lt;/a&gt;
&amp;ldquo;N 叉树的层序遍历&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/n-ary-tree-level-order-traversal/&#34;&gt;https://leetcode.com/problems/n-ary-tree-level-order-traversal/&lt;/a&gt;
&amp;ldquo;二叉树的堂兄弟节点&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/cousins-in-binary-tree/&#34;&gt;https://leetcode.com/problems/cousins-in-binary-tree/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你一个二叉树，请你返回其按 &lt;strong&gt;层序遍历&lt;/strong&gt; 得到的节点值。 （即逐层地，从左到右访问所有节点）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;
二叉树：&lt;code&gt;[3,9,20,null,null,15,7]&lt;/code&gt;,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;3
   / \
  9  20
    /  \
   15   7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;返回其层序遍历结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[
  [3],
  [9,20],
  [15,7]
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[101] 对称二叉树</title>
      <link>http://code.deqiang.wang/posts/leetcode101-%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Mon, 27 Dec 2021 11:29:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode101-%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;广度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/breadth-first-search/&#34;&gt;https://leetcode.com/tag/breadth-first-search/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给定一个二叉树，检查它是否是镜像对称的。&lt;/p&gt;
&lt;p&gt;例如，二叉树 &lt;code&gt;[1,2,2,3,4,4,3]&lt;/code&gt; 是对称的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1
   / \
  2   2
 / \ / \
3  4 4  3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是下面这个 &lt;code&gt;[1,2,2,null,3,null,3]&lt;/code&gt; 则不是镜像对称的:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1
   / \
  2   2
   \   \
   3    3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;进阶：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你可以运用递归和迭代两种方法解决这个问题吗？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode[114] 二叉树展开为链表</title>
      <link>http://code.deqiang.wang/posts/leetcode114-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Sun, 05 Dec 2021 17:05:45 +0000</pubDate>
      
      <guid>http://code.deqiang.wang/posts/leetcode114-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;p&gt;Related Topics:
&amp;ldquo;栈&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/stack/&#34;&gt;https://leetcode.com/tag/stack/&lt;/a&gt;
&amp;ldquo;树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/tree/&#34;&gt;https://leetcode.com/tag/tree/&lt;/a&gt;
&amp;ldquo;深度优先搜索&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/depth-first-search/&#34;&gt;https://leetcode.com/tag/depth-first-search/&lt;/a&gt;
&amp;ldquo;链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/linked-list/&#34;&gt;https://leetcode.com/tag/linked-list/&lt;/a&gt;
&amp;ldquo;二叉树&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/tag/binary-tree/&#34;&gt;https://leetcode.com/tag/binary-tree/&lt;/a&gt;
Similar Questions:
&amp;ldquo;扁平化多级双向链表&amp;rdquo;: &lt;a href=&#34;https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/&#34;&gt;https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;problem&#34;&gt;
  Problem:
  &lt;a class=&#34;heading-link&#34; href=&#34;#problem&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;给你二叉树的根结点 &lt;code&gt;root&lt;/code&gt; ，请你将它展开为一个单链表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;展开后的单链表应该同样使用 &lt;code&gt;TreeNode&lt;/code&gt; ，其中 &lt;code&gt;right&lt;/code&gt; 子指针指向链表中下一个结点，而左子指针始终为 &lt;code&gt;null&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;展开后的单链表应该与二叉树 &lt;a href=&#34;https://baike.baidu.com/item/%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86/6442839?fr=aladdin&#34;&gt;&lt;strong&gt;先序遍历&lt;/strong&gt;&lt;/a&gt; 顺序相同。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [1,2,5,3,4,null,6]
输出：[1,null,2,null,3,null,4,null,5,null,6]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 2：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = []
输出：[]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例 3：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;输入：root = [0]
输出：[0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树中结点数在范围 &lt;code&gt;[0, 2000]&lt;/code&gt; 内&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-100 &amp;lt;= Node.val &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**进阶：**你可以使用原地算法（&lt;code&gt;O(1)&lt;/code&gt; 额外空间）展开这棵树吗？&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
